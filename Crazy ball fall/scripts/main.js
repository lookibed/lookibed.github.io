'use strict';{window.DOMHandler=class DOMHandler{constructor(iRuntime,componentId){this._iRuntime=iRuntime;this._componentId=componentId;this._hasTickCallback=false;this._tickCallback=()=>this.Tick()}Attach(){}PostToRuntime(handler,data,dispatchOpts,transferables){this._iRuntime.PostToRuntimeComponent(this._componentId,handler,data,dispatchOpts,transferables)}PostToRuntimeAsync(handler,data,dispatchOpts,transferables){return this._iRuntime.PostToRuntimeComponentAsync(this._componentId,handler,data,
dispatchOpts,transferables)}_PostToRuntimeMaybeSync(name,data,dispatchOpts){if(this._iRuntime.UsesWorker())this.PostToRuntime(name,data,dispatchOpts);else this._iRuntime._GetLocalRuntime()["_OnMessageFromDOM"]({"type":"event","component":this._componentId,"handler":name,"dispatchOpts":dispatchOpts||null,"data":data,"responseId":null})}AddRuntimeMessageHandler(handler,func){this._iRuntime.AddRuntimeComponentMessageHandler(this._componentId,handler,func)}AddRuntimeMessageHandlers(list){for(const [handler,
func]of list)this.AddRuntimeMessageHandler(handler,func)}GetRuntimeInterface(){return this._iRuntime}GetComponentID(){return this._componentId}_StartTicking(){if(this._hasTickCallback)return;this._iRuntime._AddRAFCallback(this._tickCallback);this._hasTickCallback=true}_StopTicking(){if(!this._hasTickCallback)return;this._iRuntime._RemoveRAFCallback(this._tickCallback);this._hasTickCallback=false}Tick(){}};window.RateLimiter=class RateLimiter{constructor(callback,interval){this._callback=callback;
this._interval=interval;this._timerId=-1;this._lastCallTime=-Infinity;this._timerCallFunc=()=>this._OnTimer();this._ignoreReset=false;this._canRunImmediate=false}SetCanRunImmediate(c){this._canRunImmediate=!!c}Call(){if(this._timerId!==-1)return;const nowTime=Date.now();const timeSinceLastCall=nowTime-this._lastCallTime;const interval=this._interval;if(timeSinceLastCall>=interval&&this._canRunImmediate){this._lastCallTime=nowTime;this._RunCallback()}else this._timerId=self.setTimeout(this._timerCallFunc,
Math.max(interval-timeSinceLastCall,4))}_RunCallback(){this._ignoreReset=true;this._callback();this._ignoreReset=false}Reset(){if(this._ignoreReset)return;this._CancelTimer();this._lastCallTime=Date.now()}_OnTimer(){this._timerId=-1;this._lastCallTime=Date.now();this._RunCallback()}_CancelTimer(){if(this._timerId!==-1){self.clearTimeout(this._timerId);this._timerId=-1}}Release(){this._CancelTimer();this._callback=null;this._timerCallFunc=null}}};


'use strict';{window.DOMElementHandler=class DOMElementHandler extends self.DOMHandler{constructor(iRuntime,componentId){super(iRuntime,componentId);this._elementMap=new Map;this._autoAttach=true;this.AddRuntimeMessageHandlers([["create",e=>this._OnCreate(e)],["destroy",e=>this._OnDestroy(e)],["set-visible",e=>this._OnSetVisible(e)],["update-position",e=>this._OnUpdatePosition(e)],["update-state",e=>this._OnUpdateState(e)],["focus",e=>this._OnSetFocus(e)],["set-css-style",e=>this._OnSetCssStyle(e)],
["set-attribute",e=>this._OnSetAttribute(e)],["remove-attribute",e=>this._OnRemoveAttribute(e)]]);this.AddDOMElementMessageHandler("get-element",elem=>elem)}SetAutoAttach(e){this._autoAttach=!!e}AddDOMElementMessageHandler(handler,func){this.AddRuntimeMessageHandler(handler,e=>{const elementId=e["elementId"];const elem=this._elementMap.get(elementId);return func(elem,e)})}_OnCreate(e){const elementId=e["elementId"];const elem=this.CreateElement(elementId,e);this._elementMap.set(elementId,elem);elem.style.boxSizing=
"border-box";if(!e["isVisible"])elem.style.display="none";const focusElem=this._GetFocusElement(elem);focusElem.addEventListener("focus",e=>this._OnFocus(elementId));focusElem.addEventListener("blur",e=>this._OnBlur(elementId));if(this._autoAttach)document.body.appendChild(elem)}CreateElement(elementId,e){throw new Error("required override");}DestroyElement(elem){}_OnDestroy(e){const elementId=e["elementId"];const elem=this._elementMap.get(elementId);this.DestroyElement(elem);if(this._autoAttach)elem.parentElement.removeChild(elem);
this._elementMap.delete(elementId)}PostToRuntimeElement(handler,elementId,data){if(!data)data={};data["elementId"]=elementId;this.PostToRuntime(handler,data)}_PostToRuntimeElementMaybeSync(handler,elementId,data){if(!data)data={};data["elementId"]=elementId;this._PostToRuntimeMaybeSync(handler,data)}_OnSetVisible(e){if(!this._autoAttach)return;const elem=this._elementMap.get(e["elementId"]);elem.style.display=e["isVisible"]?"":"none"}_OnUpdatePosition(e){if(!this._autoAttach)return;const elem=this._elementMap.get(e["elementId"]);
elem.style.left=e["left"]+"px";elem.style.top=e["top"]+"px";elem.style.width=e["width"]+"px";elem.style.height=e["height"]+"px";const fontSize=e["fontSize"];if(fontSize!==null)elem.style.fontSize=fontSize+"em"}_OnUpdateState(e){const elem=this._elementMap.get(e["elementId"]);this.UpdateState(elem,e)}UpdateState(elem,e){throw new Error("required override");}_GetFocusElement(elem){return elem}_OnFocus(elementId){this.PostToRuntimeElement("elem-focused",elementId)}_OnBlur(elementId){this.PostToRuntimeElement("elem-blurred",
elementId)}_OnSetFocus(e){const elem=this._GetFocusElement(this._elementMap.get(e["elementId"]));if(e["focus"])elem.focus();else elem.blur()}_OnSetCssStyle(e){const elem=this._elementMap.get(e["elementId"]);elem.style[e["prop"]]=e["val"]}_OnSetAttribute(e){const elem=this._elementMap.get(e["elementId"]);elem.setAttribute(e["name"],e["val"])}_OnRemoveAttribute(e){const elem=this._elementMap.get(e["elementId"]);elem.removeAttribute(e["name"])}GetElementById(elementId){return this._elementMap.get(elementId)}}};


'use strict';{const isiOSLike=/(iphone|ipod|ipad|macos|macintosh|mac os x)/i.test(navigator.userAgent);let resolveCounter=0;function AddScript(url){const elem=document.createElement("script");elem.async=false;elem.type="module";if(url.isStringSrc)return new Promise(resolve=>{const resolveName="c3_resolve_"+resolveCounter;++resolveCounter;self[resolveName]=resolve;elem.textContent=url.str+`\n\nself["${resolveName}"]();`;document.head.appendChild(elem)});else return new Promise((resolve,reject)=>{elem.onload=
resolve;elem.onerror=reject;elem.src=url;document.head.appendChild(elem)})}let didCheckWorkerModuleSupport=false;let isWorkerModuleSupported=false;function SupportsWorkerTypeModule(){if(!didCheckWorkerModuleSupport){try{new Worker("blob://",{get type(){isWorkerModuleSupported=true}})}catch(e){}didCheckWorkerModuleSupport=true}return isWorkerModuleSupported}let tmpAudio=new Audio;const supportedAudioFormats={"audio/webm; codecs=opus":!!tmpAudio.canPlayType("audio/webm; codecs=opus"),"audio/ogg; codecs=opus":!!tmpAudio.canPlayType("audio/ogg; codecs=opus"),
"audio/webm; codecs=vorbis":!!tmpAudio.canPlayType("audio/webm; codecs=vorbis"),"audio/ogg; codecs=vorbis":!!tmpAudio.canPlayType("audio/ogg; codecs=vorbis"),"audio/mp4":!!tmpAudio.canPlayType("audio/mp4"),"audio/mpeg":!!tmpAudio.canPlayType("audio/mpeg")};tmpAudio=null;async function BlobToString(blob){const arrayBuffer=await BlobToArrayBuffer(blob);const textDecoder=new TextDecoder("utf-8");return textDecoder.decode(arrayBuffer)}function BlobToArrayBuffer(blob){return new Promise((resolve,reject)=>
{const fileReader=new FileReader;fileReader.onload=e=>resolve(e.target.result);fileReader.onerror=err=>reject(err);fileReader.readAsArrayBuffer(blob)})}const queuedArrayBufferReads=[];let activeArrayBufferReads=0;const MAX_ARRAYBUFFER_READS=8;window["RealFile"]=window["File"];const domHandlerClasses=[];const runtimeEventHandlers=new Map;const pendingResponsePromises=new Map;let nextResponseId=0;const runOnStartupFunctions=[];self.runOnStartup=function runOnStartup(f){if(typeof f!=="function")throw new Error("runOnStartup called without a function");
runOnStartupFunctions.push(f)};const WEBVIEW_EXPORT_TYPES=new Set(["cordova","playable-ad","instant-games"]);function IsWebViewExportType(exportType){return WEBVIEW_EXPORT_TYPES.has(exportType)}let isWrapperFullscreen=false;window.RuntimeInterface=class RuntimeInterface{constructor(opts){this._useWorker=opts.useWorker;this._messageChannelPort=null;this._baseUrl="";this._scriptFolder=opts.scriptFolder;this._workerScriptURLs={};this._worker=null;this._localRuntime=null;this._domHandlers=[];this._runtimeDomHandler=
null;this._canvas=null;this._jobScheduler=null;this._rafId=-1;this._rafFunc=()=>this._OnRAFCallback();this._rafCallbacks=[];this._exportType=opts.exportType;this._isFileProtocol=location.protocol.substr(0,4)==="file";if(this._useWorker&&(typeof OffscreenCanvas==="undefined"||!navigator["userActivation"]||!SupportsWorkerTypeModule()))this._useWorker=false;if(this._exportType==="playable-ad"||this._exportType==="instant-games")this._useWorker=false;if(this._exportType==="cordova"&&this._useWorker)if(/android/i.test(navigator.userAgent)){const chromeVer=
/Chrome\/(\d+)/i.exec(navigator.userAgent);if(!chromeVer||!(parseInt(chromeVer[1],10)>=90))this._useWorker=false}else this._useWorker=false;this._localFileBlobs=null;this._localFileStrings=null;if((this._exportType==="html5"||this._exportType==="playable-ad")&&this._isFileProtocol)alert("Exported games won't work until you upload them. (When running on the file: protocol, browsers block many features from working for security reasons.)");if(this._exportType==="html5"&&!window.isSecureContext)console.warn("[Construct 3] Warning: the browser indicates this is not a secure context. Some features may be unavailable. Use secure (HTTPS) hosting to ensure all features are available.");
this.AddRuntimeComponentMessageHandler("runtime","cordova-fetch-local-file",e=>this._OnCordovaFetchLocalFile(e));this.AddRuntimeComponentMessageHandler("runtime","create-job-worker",e=>this._OnCreateJobWorker(e));if(this._exportType==="cordova")document.addEventListener("deviceready",()=>this._Init(opts));else this._Init(opts)}Release(){this._CancelAnimationFrame();if(this._messageChannelPort){this._messageChannelPort.onmessage=null;this._messageChannelPort=null}if(this._worker){this._worker.terminate();
this._worker=null}if(this._localRuntime){this._localRuntime.Release();this._localRuntime=null}if(this._canvas){this._canvas.parentElement.removeChild(this._canvas);this._canvas=null}}GetCanvas(){return this._canvas}GetBaseURL(){return this._baseUrl}UsesWorker(){return this._useWorker}GetExportType(){return this._exportType}IsFileProtocol(){return this._isFileProtocol}GetScriptFolder(){return this._scriptFolder}IsiOSCordova(){return isiOSLike&&this._exportType==="cordova"}IsiOSWebView(){const ua=navigator.userAgent;
return isiOSLike&&IsWebViewExportType(this._exportType)||navigator["standalone"]||/crios\/|fxios\/|edgios\//i.test(ua)}async _Init(opts){if(this._exportType==="macos-wkwebview")this._SendWrapperMessage({"type":"ready"});if(this._exportType==="playable-ad"){this._localFileBlobs=self["c3_base64files"];this._localFileStrings={};await this._ConvertDataUrisToBlobs();for(let i=0,len=opts.engineScripts.length;i<len;++i){const src=opts.engineScripts[i].toLowerCase();if(this._localFileStrings.hasOwnProperty(src))opts.engineScripts[i]=
{isStringSrc:true,str:this._localFileStrings[src]};else if(this._localFileBlobs.hasOwnProperty(src))opts.engineScripts[i]=URL.createObjectURL(this._localFileBlobs[src])}}if(opts.baseUrl)this._baseUrl=opts.baseUrl;else{const origin=location.origin;this._baseUrl=(origin==="null"?"file:///":origin)+location.pathname;const i=this._baseUrl.lastIndexOf("/");if(i!==-1)this._baseUrl=this._baseUrl.substr(0,i+1)}if(opts.workerScripts)this._workerScriptURLs=opts.workerScripts;const messageChannel=new MessageChannel;
this._messageChannelPort=messageChannel.port1;this._messageChannelPort.onmessage=e=>this["_OnMessageFromRuntime"](e.data);if(window["c3_addPortMessageHandler"])window["c3_addPortMessageHandler"](e=>this._OnMessageFromDebugger(e));this._jobScheduler=new self.JobSchedulerDOM(this);await this._jobScheduler.Init();if(typeof window["StatusBar"]==="object")window["StatusBar"]["hide"]();if(typeof window["AndroidFullScreen"]==="object")window["AndroidFullScreen"]["immersiveMode"]();if(this._useWorker)await this._InitWorker(opts,
messageChannel.port2);else await this._InitDOM(opts,messageChannel.port2)}_GetWorkerURL(url){let ret;if(this._workerScriptURLs.hasOwnProperty(url))ret=this._workerScriptURLs[url];else if(url.endsWith("/workermain.js")&&this._workerScriptURLs.hasOwnProperty("workermain.js"))ret=this._workerScriptURLs["workermain.js"];else if(this._exportType==="playable-ad"&&this._localFileBlobs.hasOwnProperty(url.toLowerCase()))ret=this._localFileBlobs[url.toLowerCase()];else ret=url;if(ret instanceof Blob)ret=URL.createObjectURL(ret);
return ret}async CreateWorker(url,baseUrl,workerOpts){if(url.startsWith("blob:"))return new Worker(url,workerOpts);if(this._exportType==="cordova"&&this._isFileProtocol){let filePath="";if(workerOpts.isC3MainWorker)filePath=url;else filePath=this._scriptFolder+url;const arrayBuffer=await this.CordovaFetchLocalFileAsArrayBuffer(filePath);const blob=new Blob([arrayBuffer],{type:"application/javascript"});return new Worker(URL.createObjectURL(blob),workerOpts)}const absUrl=new URL(url,baseUrl);const isCrossOrigin=
location.origin!==absUrl.origin;if(isCrossOrigin){const response=await fetch(absUrl);if(!response.ok)throw new Error("failed to fetch worker script");const blob=await response.blob();return new Worker(URL.createObjectURL(blob),workerOpts)}else return new Worker(absUrl,workerOpts)}_GetWindowInnerWidth(){return Math.max(window.innerWidth,1)}_GetWindowInnerHeight(){return Math.max(window.innerHeight,1)}_GetCommonRuntimeOptions(opts){return{"baseUrl":this._baseUrl,"windowInnerWidth":this._GetWindowInnerWidth(),
"windowInnerHeight":this._GetWindowInnerHeight(),"devicePixelRatio":window.devicePixelRatio,"isFullscreen":RuntimeInterface.IsDocumentFullscreen(),"projectData":opts.projectData,"previewImageBlobs":window["cr_previewImageBlobs"]||this._localFileBlobs,"previewProjectFileBlobs":window["cr_previewProjectFileBlobs"],"previewProjectFileSWUrls":window["cr_previewProjectFiles"],"swClientId":window.cr_swClientId||"","exportType":opts.exportType,"isDebug":self.location.search.indexOf("debug")>-1,"ife":!!self.ife,
"jobScheduler":this._jobScheduler.GetPortData(),"supportedAudioFormats":supportedAudioFormats,"opusWasmScriptUrl":window["cr_opusWasmScriptUrl"]||this._scriptFolder+"opus.wasm.js","opusWasmBinaryUrl":window["cr_opusWasmBinaryUrl"]||this._scriptFolder+"opus.wasm.wasm","isFileProtocol":this._isFileProtocol,"isiOSCordova":this.IsiOSCordova(),"isiOSWebView":this.IsiOSWebView(),"isFBInstantAvailable":typeof self["FBInstant"]!=="undefined"}}async _InitWorker(opts,port2){const workerMainUrl=this._GetWorkerURL(opts.workerMainUrl);
this._worker=await this.CreateWorker(workerMainUrl,this._baseUrl,{type:"module",name:"Runtime",isC3MainWorker:true});this._canvas=document.createElement("canvas");this._canvas.style.display="none";const offscreenCanvas=this._canvas["transferControlToOffscreen"]();document.body.appendChild(this._canvas);window["c3canvas"]=this._canvas;let workerDependencyScripts=opts.workerDependencyScripts||[];let engineScripts=opts.engineScripts;workerDependencyScripts=await Promise.all(workerDependencyScripts.map(url=>
this._MaybeGetCordovaScriptURL(url)));engineScripts=await Promise.all(engineScripts.map(url=>this._MaybeGetCordovaScriptURL(url)));if(this._exportType==="cordova")for(let i=0,len=opts.projectScripts.length;i<len;++i){const info=opts.projectScripts[i];const originalUrl=info[0];if(originalUrl===opts.mainProjectScript||(originalUrl==="scriptsInEvents.js"||originalUrl.endsWith("/scriptsInEvents.js")))info[1]=await this._MaybeGetCordovaScriptURL(originalUrl)}this._worker.postMessage(Object.assign(this._GetCommonRuntimeOptions(opts),
{"type":"init-runtime","isInWorker":true,"messagePort":port2,"canvas":offscreenCanvas,"workerDependencyScripts":workerDependencyScripts,"engineScripts":engineScripts,"projectScripts":opts.projectScripts,"mainProjectScript":opts.mainProjectScript,"projectScriptsStatus":self["C3_ProjectScriptsStatus"]}),[port2,offscreenCanvas,...this._jobScheduler.GetPortTransferables()]);this._domHandlers=domHandlerClasses.map(C=>new C(this));this._FindRuntimeDOMHandler();self["c3_callFunction"]=(name,params)=>this._runtimeDomHandler._InvokeFunctionFromJS(name,
params);if(this._exportType==="preview")self["goToLastErrorScript"]=()=>this.PostToRuntimeComponent("runtime","go-to-last-error-script")}async _InitDOM(opts,port2){this._canvas=document.createElement("canvas");this._canvas.style.display="none";document.body.appendChild(this._canvas);window["c3canvas"]=this._canvas;this._domHandlers=domHandlerClasses.map(C=>new C(this));this._FindRuntimeDOMHandler();let engineScripts=opts.engineScripts.map(url=>typeof url==="string"?(new URL(url,this._baseUrl)).toString():
url);if(Array.isArray(opts.workerDependencyScripts))engineScripts.unshift(...opts.workerDependencyScripts);engineScripts=await Promise.all(engineScripts.map(url=>this._MaybeGetCordovaScriptURL(url)));await Promise.all(engineScripts.map(url=>AddScript(url)));const scriptsStatus=self["C3_ProjectScriptsStatus"];const mainProjectScript=opts.mainProjectScript;const allProjectScripts=opts.projectScripts;for(let [originalUrl,loadUrl]of allProjectScripts){if(!loadUrl)loadUrl=originalUrl;if(originalUrl===
mainProjectScript)try{loadUrl=await this._MaybeGetCordovaScriptURL(loadUrl);await AddScript(loadUrl);if(this._exportType==="preview"&&!scriptsStatus[originalUrl])this._ReportProjectMainScriptError(originalUrl,"main script did not run to completion")}catch(err){this._ReportProjectMainScriptError(originalUrl,err)}else if(originalUrl==="scriptsInEvents.js"||originalUrl.endsWith("/scriptsInEvents.js")){loadUrl=await this._MaybeGetCordovaScriptURL(loadUrl);await AddScript(loadUrl)}}if(this._exportType===
"preview"&&typeof self.C3.ScriptsInEvents!=="object"){this._RemoveLoadingMessage();const msg="Failed to load JavaScript code used in events. Check all your JavaScript code has valid syntax.";console.error("[C3 runtime] "+msg);alert(msg);return}const runtimeOpts=Object.assign(this._GetCommonRuntimeOptions(opts),{"isInWorker":false,"messagePort":port2,"canvas":this._canvas,"runOnStartupFunctions":runOnStartupFunctions});this._OnBeforeCreateRuntime();this._localRuntime=self["C3_CreateRuntime"](runtimeOpts);
await self["C3_InitRuntime"](this._localRuntime,runtimeOpts)}_ReportProjectMainScriptError(url,err){this._RemoveLoadingMessage();console.error(`[Preview] Failed to load project main script (${url}): `,err);alert(`Failed to load project main script (${url}). Check all your JavaScript code has valid syntax. Press F12 and check the console for error details.`)}_OnBeforeCreateRuntime(){this._RemoveLoadingMessage()}_RemoveLoadingMessage(){const loadingElem=window.cr_previewLoadingElem;if(loadingElem){loadingElem.parentElement.removeChild(loadingElem);
window.cr_previewLoadingElem=null}}async _OnCreateJobWorker(e){const outputPort=await this._jobScheduler._CreateJobWorker();return{"outputPort":outputPort,"transferables":[outputPort]}}_GetLocalRuntime(){if(this._useWorker)throw new Error("not available in worker mode");return this._localRuntime}PostToRuntimeComponent(component,handler,data,dispatchOpts,transferables){this._messageChannelPort.postMessage({"type":"event","component":component,"handler":handler,"dispatchOpts":dispatchOpts||null,"data":data,
"responseId":null},transferables)}PostToRuntimeComponentAsync(component,handler,data,dispatchOpts,transferables){const responseId=nextResponseId++;const ret=new Promise((resolve,reject)=>{pendingResponsePromises.set(responseId,{resolve,reject})});this._messageChannelPort.postMessage({"type":"event","component":component,"handler":handler,"dispatchOpts":dispatchOpts||null,"data":data,"responseId":responseId},transferables);return ret}["_OnMessageFromRuntime"](data){const type=data["type"];if(type===
"event")return this._OnEventFromRuntime(data);else if(type==="result")this._OnResultFromRuntime(data);else if(type==="runtime-ready")this._OnRuntimeReady();else if(type==="alert-error"){this._RemoveLoadingMessage();alert(data["message"])}else if(type==="creating-runtime")this._OnBeforeCreateRuntime();else throw new Error(`unknown message '${type}'`);}_OnEventFromRuntime(e){const component=e["component"];const handler=e["handler"];const data=e["data"];const responseId=e["responseId"];const handlerMap=
runtimeEventHandlers.get(component);if(!handlerMap){console.warn(`[DOM] No event handlers for component '${component}'`);return}const func=handlerMap.get(handler);if(!func){console.warn(`[DOM] No handler '${handler}' for component '${component}'`);return}let ret=null;try{ret=func(data)}catch(err){console.error(`Exception in '${component}' handler '${handler}':`,err);if(responseId!==null)this._PostResultToRuntime(responseId,false,""+err);return}if(responseId===null)return ret;else if(ret&&ret.then)ret.then(result=>
this._PostResultToRuntime(responseId,true,result)).catch(err=>{console.error(`Rejection from '${component}' handler '${handler}':`,err);this._PostResultToRuntime(responseId,false,""+err)});else this._PostResultToRuntime(responseId,true,ret)}_PostResultToRuntime(responseId,isOk,result){let transferables;if(result&&result["transferables"])transferables=result["transferables"];this._messageChannelPort.postMessage({"type":"result","responseId":responseId,"isOk":isOk,"result":result},transferables)}_OnResultFromRuntime(data){const responseId=
data["responseId"];const isOk=data["isOk"];const result=data["result"];const pendingPromise=pendingResponsePromises.get(responseId);if(isOk)pendingPromise.resolve(result);else pendingPromise.reject(result);pendingResponsePromises.delete(responseId)}AddRuntimeComponentMessageHandler(component,handler,func){let handlerMap=runtimeEventHandlers.get(component);if(!handlerMap){handlerMap=new Map;runtimeEventHandlers.set(component,handlerMap)}if(handlerMap.has(handler))throw new Error(`[DOM] Component '${component}' already has handler '${handler}'`);
handlerMap.set(handler,func)}static AddDOMHandlerClass(Class){if(domHandlerClasses.includes(Class))throw new Error("DOM handler already added");domHandlerClasses.push(Class)}_FindRuntimeDOMHandler(){for(const dh of this._domHandlers)if(dh.GetComponentID()==="runtime"){this._runtimeDomHandler=dh;return}throw new Error("cannot find runtime DOM handler");}_OnMessageFromDebugger(e){this.PostToRuntimeComponent("debugger","message",e)}_OnRuntimeReady(){for(const h of this._domHandlers)h.Attach()}static IsDocumentFullscreen(){return!!(document["fullscreenElement"]||
document["webkitFullscreenElement"]||document["mozFullScreenElement"]||isWrapperFullscreen)}static _SetWrapperIsFullscreenFlag(f){isWrapperFullscreen=!!f}async GetRemotePreviewStatusInfo(){return await this.PostToRuntimeComponentAsync("runtime","get-remote-preview-status-info")}_AddRAFCallback(f){this._rafCallbacks.push(f);this._RequestAnimationFrame()}_RemoveRAFCallback(f){const i=this._rafCallbacks.indexOf(f);if(i===-1)throw new Error("invalid callback");this._rafCallbacks.splice(i,1);if(!this._rafCallbacks.length)this._CancelAnimationFrame()}_RequestAnimationFrame(){if(this._rafId===
-1&&this._rafCallbacks.length)this._rafId=requestAnimationFrame(this._rafFunc)}_CancelAnimationFrame(){if(this._rafId!==-1){cancelAnimationFrame(this._rafId);this._rafId=-1}}_OnRAFCallback(){this._rafId=-1;for(const f of this._rafCallbacks)f();this._RequestAnimationFrame()}TryPlayMedia(mediaElem){this._runtimeDomHandler.TryPlayMedia(mediaElem)}RemovePendingPlay(mediaElem){this._runtimeDomHandler.RemovePendingPlay(mediaElem)}_PlayPendingMedia(){this._runtimeDomHandler._PlayPendingMedia()}SetSilent(s){this._runtimeDomHandler.SetSilent(s)}IsAudioFormatSupported(typeStr){return!!supportedAudioFormats[typeStr]}async _WasmDecodeWebMOpus(arrayBuffer){const result=
await this.PostToRuntimeComponentAsync("runtime","opus-decode",{"arrayBuffer":arrayBuffer},null,[arrayBuffer]);return new Float32Array(result)}IsAbsoluteURL(url){return/^(?:[a-z\-]+:)?\/\//.test(url)||url.substr(0,5)==="data:"||url.substr(0,5)==="blob:"}IsRelativeURL(url){return!this.IsAbsoluteURL(url)}async _MaybeGetCordovaScriptURL(url){if(this._exportType==="cordova"&&(url.startsWith("file:")||this._isFileProtocol&&this.IsRelativeURL(url))){let filename=url;if(filename.startsWith(this._baseUrl))filename=
filename.substr(this._baseUrl.length);const arrayBuffer=await this.CordovaFetchLocalFileAsArrayBuffer(filename);const blob=new Blob([arrayBuffer],{type:"application/javascript"});return URL.createObjectURL(blob)}else return url}async _OnCordovaFetchLocalFile(e){const filename=e["filename"];switch(e["as"]){case "text":return await this.CordovaFetchLocalFileAsText(filename);case "buffer":return await this.CordovaFetchLocalFileAsArrayBuffer(filename);default:throw new Error("unsupported type");}}_GetPermissionAPI(){const api=
window["cordova"]&&window["cordova"]["plugins"]&&window["cordova"]["plugins"]["permissions"];if(typeof api!=="object")throw new Error("Permission API is not loaded");return api}_MapPermissionID(api,permission){const permissionID=api[permission];if(typeof permissionID!=="string")throw new Error("Invalid permission name");return permissionID}_HasPermission(id){const api=this._GetPermissionAPI();return new Promise((resolve,reject)=>api["checkPermission"](this._MapPermissionID(api,id),status=>resolve(!!status["hasPermission"]),
reject))}_RequestPermission(id){const api=this._GetPermissionAPI();return new Promise((resolve,reject)=>api["requestPermission"](this._MapPermissionID(api,id),status=>resolve(!!status["hasPermission"]),reject))}async RequestPermissions(permissions){if(this.GetExportType()!=="cordova")return true;if(this.IsiOSCordova())return true;for(const id of permissions){const alreadyGranted=await this._HasPermission(id);if(alreadyGranted)continue;const granted=await this._RequestPermission(id);if(granted===false)return false}return true}async RequirePermissions(...permissions){if(await this.RequestPermissions(permissions)===
false)throw new Error("Permission not granted");}CordovaFetchLocalFile(filename){const path=window["cordova"]["file"]["applicationDirectory"]+"www/"+filename.toLowerCase();return new Promise((resolve,reject)=>{window["resolveLocalFileSystemURL"](path,entry=>{entry["file"](resolve,reject)},reject)})}async CordovaFetchLocalFileAsText(filename){const file=await this.CordovaFetchLocalFile(filename);return await BlobToString(file)}_CordovaMaybeStartNextArrayBufferRead(){if(!queuedArrayBufferReads.length)return;
if(activeArrayBufferReads>=MAX_ARRAYBUFFER_READS)return;activeArrayBufferReads++;const job=queuedArrayBufferReads.shift();this._CordovaDoFetchLocalFileAsAsArrayBuffer(job.filename,job.successCallback,job.errorCallback)}CordovaFetchLocalFileAsArrayBuffer(filename){return new Promise((resolve,reject)=>{queuedArrayBufferReads.push({filename:filename,successCallback:result=>{activeArrayBufferReads--;this._CordovaMaybeStartNextArrayBufferRead();resolve(result)},errorCallback:err=>{activeArrayBufferReads--;
this._CordovaMaybeStartNextArrayBufferRead();reject(err)}});this._CordovaMaybeStartNextArrayBufferRead()})}async _CordovaDoFetchLocalFileAsAsArrayBuffer(filename,successCallback,errorCallback){try{const file=await this.CordovaFetchLocalFile(filename);const arrayBuffer=await BlobToArrayBuffer(file);successCallback(arrayBuffer)}catch(err){errorCallback(err)}}_SendWrapperMessage(o){if(this._exportType==="windows-webview2")window["chrome"]["webview"]["postMessage"](JSON.stringify(o));else if(this._exportType===
"macos-wkwebview")window["webkit"]["messageHandlers"]["C3Wrapper"]["postMessage"](JSON.stringify(o));else throw new Error("cannot send wrapper message");}async _ConvertDataUrisToBlobs(){const promises=[];for(const [filename,data]of Object.entries(this._localFileBlobs))promises.push(this._ConvertDataUriToBlobs(filename,data));await Promise.all(promises)}async _ConvertDataUriToBlobs(filename,data){if(typeof data==="object"){this._localFileBlobs[filename]=new Blob([data["str"]],{"type":data["type"]});
this._localFileStrings[filename]=data["str"]}else{let blob=await this._FetchDataUri(data);if(!blob)blob=this._DataURIToBinaryBlobSync(data);this._localFileBlobs[filename]=blob}}async _FetchDataUri(dataUri){try{const response=await fetch(dataUri);return await response.blob()}catch(err){console.warn("Failed to fetch a data: URI. Falling back to a slower workaround. This is probably because the Content Security Policy unnecessarily blocked it. Allow data: URIs in your CSP to avoid this.",err);return null}}_DataURIToBinaryBlobSync(datauri){const o=
this._ParseDataURI(datauri);return this._BinaryStringToBlob(o.data,o.mime_type)}_ParseDataURI(datauri){const comma=datauri.indexOf(",");if(comma<0)throw new URIError("expected comma in data: uri");const typepart=datauri.substring(5,comma);const datapart=datauri.substring(comma+1);const typearr=typepart.split(";");const mimetype=typearr[0]||"";const encoding1=typearr[1];const encoding2=typearr[2];let decodeddata;if(encoding1==="base64"||encoding2==="base64")decodeddata=atob(datapart);else decodeddata=
decodeURIComponent(datapart);return{mime_type:mimetype,data:decodeddata}}_BinaryStringToBlob(binstr,mime_type){let len=binstr.length;let len32=len>>2;let a8=new Uint8Array(len);let a32=new Uint32Array(a8.buffer,0,len32);let i,j;for(i=0,j=0;i<len32;++i)a32[i]=binstr.charCodeAt(j++)|binstr.charCodeAt(j++)<<8|binstr.charCodeAt(j++)<<16|binstr.charCodeAt(j++)<<24;let tailLength=len&3;while(tailLength--){a8[j]=binstr.charCodeAt(j);++j}return new Blob([a8],{"type":mime_type})}}};


'use strict';{const RuntimeInterface=self.RuntimeInterface;function IsCompatibilityMouseEvent(e){return e["sourceCapabilities"]&&e["sourceCapabilities"]["firesTouchEvents"]||e["originalEvent"]&&e["originalEvent"]["sourceCapabilities"]&&e["originalEvent"]["sourceCapabilities"]["firesTouchEvents"]}const KEY_CODE_ALIASES=new Map([["OSLeft","MetaLeft"],["OSRight","MetaRight"]]);const DISPATCH_RUNTIME_AND_SCRIPT={"dispatchRuntimeEvent":true,"dispatchUserScriptEvent":true};const DISPATCH_SCRIPT_ONLY={"dispatchUserScriptEvent":true};
const DISPATCH_RUNTIME_ONLY={"dispatchRuntimeEvent":true};function AddStyleSheet(cssUrl){return new Promise((resolve,reject)=>{const styleLink=document.createElement("link");styleLink.onload=()=>resolve(styleLink);styleLink.onerror=err=>reject(err);styleLink.rel="stylesheet";styleLink.href=cssUrl;document.head.appendChild(styleLink)})}function FetchImage(url){return new Promise((resolve,reject)=>{const img=new Image;img.onload=()=>resolve(img);img.onerror=err=>reject(err);img.src=url})}async function BlobToImage(blob){const blobUrl=
URL.createObjectURL(blob);try{return await FetchImage(blobUrl)}finally{URL.revokeObjectURL(blobUrl)}}function BlobToString(blob){return new Promise((resolve,reject)=>{let fileReader=new FileReader;fileReader.onload=e=>resolve(e.target.result);fileReader.onerror=err=>reject(err);fileReader.readAsText(blob)})}async function BlobToSvgImage(blob,width,height){if(!/firefox/i.test(navigator.userAgent))return await BlobToImage(blob);let str=await BlobToString(blob);const parser=new DOMParser;const doc=parser.parseFromString(str,
"image/svg+xml");const rootElem=doc.documentElement;if(rootElem.hasAttribute("width")&&rootElem.hasAttribute("height")){const widthStr=rootElem.getAttribute("width");const heightStr=rootElem.getAttribute("height");if(!widthStr.includes("%")&&!heightStr.includes("%"))return await BlobToImage(blob)}rootElem.setAttribute("width",width+"px");rootElem.setAttribute("height",height+"px");const serializer=new XMLSerializer;str=serializer.serializeToString(doc);blob=new Blob([str],{type:"image/svg+xml"});
return await BlobToImage(blob)}function IsInContentEditable(el){do{if(el.parentNode&&el.hasAttribute("contenteditable"))return true;el=el.parentNode}while(el);return false}const keyboardInputElementTagNames=new Set(["input","textarea","datalist","select"]);function IsKeyboardInputElement(elem){return keyboardInputElementTagNames.has(elem.tagName.toLowerCase())||IsInContentEditable(elem)}const canvasOrDocTags=new Set(["canvas","body","html"]);function PreventDefaultOnCanvasOrDoc(e){const tagName=e.target.tagName.toLowerCase();
if(canvasOrDocTags.has(tagName))e.preventDefault()}function BlockWheelZoom(e){if(e.metaKey||e.ctrlKey)e.preventDefault()}self["C3_GetSvgImageSize"]=async function(blob){const img=await BlobToImage(blob);if(img.width>0&&img.height>0)return[img.width,img.height];else{img.style.position="absolute";img.style.left="0px";img.style.top="0px";img.style.visibility="hidden";document.body.appendChild(img);const rc=img.getBoundingClientRect();document.body.removeChild(img);return[rc.width,rc.height]}};self["C3_RasterSvgImageBlob"]=
async function(blob,imageWidth,imageHeight,surfaceWidth,surfaceHeight){const img=await BlobToSvgImage(blob,imageWidth,imageHeight);const canvas=document.createElement("canvas");canvas.width=surfaceWidth;canvas.height=surfaceHeight;const ctx=canvas.getContext("2d");ctx.drawImage(img,0,0,imageWidth,imageHeight);return canvas};let isCordovaPaused=false;document.addEventListener("pause",()=>isCordovaPaused=true);document.addEventListener("resume",()=>isCordovaPaused=false);function ParentHasFocus(){try{return window.parent&&
window.parent.document.hasFocus()}catch(err){return false}}function KeyboardIsVisible(){const elem=document.activeElement;if(!elem)return false;const tagName=elem.tagName.toLowerCase();const inputTypes=new Set(["email","number","password","search","tel","text","url"]);if(tagName==="textarea")return true;if(tagName==="input")return inputTypes.has(elem.type.toLowerCase()||"text");return IsInContentEditable(elem)}const DOM_COMPONENT_ID="runtime";const HANDLER_CLASS=class RuntimeDOMHandler extends self.DOMHandler{constructor(iRuntime){super(iRuntime,
DOM_COMPONENT_ID);this._isFirstSizeUpdate=true;this._simulatedResizeTimerId=-1;this._targetOrientation="any";this._attachedDeviceOrientationEvent=false;this._attachedDeviceMotionEvent=false;this._debugHighlightElem=null;this._pointerRawUpdateRateLimiter=null;this._lastPointerRawUpdateEvent=null;this._pointerRawMovementX=0;this._pointerRawMovementY=0;iRuntime.AddRuntimeComponentMessageHandler("canvas","update-size",e=>this._OnUpdateCanvasSize(e));iRuntime.AddRuntimeComponentMessageHandler("runtime",
"invoke-download",e=>this._OnInvokeDownload(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","raster-svg-image",e=>this._OnRasterSvgImage(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","get-svg-image-size",e=>this._OnGetSvgImageSize(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","set-target-orientation",e=>this._OnSetTargetOrientation(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","register-sw",()=>this._OnRegisterSW());iRuntime.AddRuntimeComponentMessageHandler("runtime",
"post-to-debugger",e=>this._OnPostToDebugger(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","go-to-script",e=>this._OnPostToDebugger(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","before-start-ticking",()=>this._OnBeforeStartTicking());iRuntime.AddRuntimeComponentMessageHandler("runtime","debug-highlight",e=>this._OnDebugHighlight(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","enable-device-orientation",()=>this._AttachDeviceOrientationEvent());iRuntime.AddRuntimeComponentMessageHandler("runtime",
"enable-device-motion",()=>this._AttachDeviceMotionEvent());iRuntime.AddRuntimeComponentMessageHandler("runtime","add-stylesheet",e=>this._OnAddStylesheet(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","alert",e=>this._OnAlert(e));iRuntime.AddRuntimeComponentMessageHandler("runtime","hide-cordova-splash",()=>this._OnHideCordovaSplash());const allowDefaultContextMenuTagNames=new Set(["input","textarea","datalist"]);window.addEventListener("contextmenu",e=>{const t=e.target;const name=t.tagName.toLowerCase();
if(!allowDefaultContextMenuTagNames.has(name)&&!IsInContentEditable(t))e.preventDefault()});const canvas=iRuntime.GetCanvas();window.addEventListener("selectstart",PreventDefaultOnCanvasOrDoc);window.addEventListener("gesturehold",PreventDefaultOnCanvasOrDoc);canvas.addEventListener("selectstart",PreventDefaultOnCanvasOrDoc);canvas.addEventListener("gesturehold",PreventDefaultOnCanvasOrDoc);window.addEventListener("touchstart",PreventDefaultOnCanvasOrDoc,{"passive":false});if(typeof PointerEvent!==
"undefined"){window.addEventListener("pointerdown",PreventDefaultOnCanvasOrDoc,{"passive":false});canvas.addEventListener("pointerdown",PreventDefaultOnCanvasOrDoc)}else canvas.addEventListener("touchstart",PreventDefaultOnCanvasOrDoc);this._mousePointerLastButtons=0;window.addEventListener("mousedown",e=>{if(e.button===1)e.preventDefault()});window.addEventListener("mousewheel",BlockWheelZoom,{"passive":false});window.addEventListener("wheel",BlockWheelZoom,{"passive":false});window.addEventListener("resize",
()=>this._OnWindowResize());window.addEventListener("fullscreenchange",()=>this._OnFullscreenChange());window.addEventListener("webkitfullscreenchange",()=>this._OnFullscreenChange());window.addEventListener("mozfullscreenchange",()=>this._OnFullscreenChange());window.addEventListener("fullscreenerror",e=>this._OnFullscreenError(e));window.addEventListener("webkitfullscreenerror",e=>this._OnFullscreenError(e));window.addEventListener("mozfullscreenerror",e=>this._OnFullscreenError(e));if(iRuntime.IsiOSWebView())window.addEventListener("focusout",
()=>{if(!KeyboardIsVisible())document.scrollingElement.scrollTop=0});self["C3WrapperOnMessage"]=msg=>this._OnWrapperMessage(msg);this._mediaPendingPlay=new Set;this._mediaRemovedPendingPlay=new WeakSet;this._isSilent=false}_OnBeforeStartTicking(){if(this._iRuntime.GetExportType()==="cordova"){document.addEventListener("pause",()=>this._OnVisibilityChange(true));document.addEventListener("resume",()=>this._OnVisibilityChange(false))}else document.addEventListener("visibilitychange",()=>this._OnVisibilityChange(document.hidden));
return{"isSuspended":!!(document.hidden||isCordovaPaused)}}Attach(){window.addEventListener("focus",()=>this._PostRuntimeEvent("window-focus"));window.addEventListener("blur",()=>{this._PostRuntimeEvent("window-blur",{"parentHasFocus":ParentHasFocus()});this._mousePointerLastButtons=0});window.addEventListener("focusin",e=>{if(IsKeyboardInputElement(e.target))this._PostRuntimeEvent("keyboard-blur")});window.addEventListener("keydown",e=>this._OnKeyEvent("keydown",e));window.addEventListener("keyup",
e=>this._OnKeyEvent("keyup",e));window.addEventListener("dblclick",e=>this._OnMouseEvent("dblclick",e,DISPATCH_RUNTIME_AND_SCRIPT));window.addEventListener("wheel",e=>this._OnMouseWheelEvent("wheel",e));if(typeof PointerEvent!=="undefined"){window.addEventListener("pointerdown",e=>{this._HandlePointerDownFocus(e);this._OnPointerEvent("pointerdown",e)});if(this._iRuntime.UsesWorker()&&typeof window["onpointerrawupdate"]!=="undefined"&&self===self.top){this._pointerRawUpdateRateLimiter=new self.RateLimiter(()=>
this._DoSendPointerRawUpdate(),5);this._pointerRawUpdateRateLimiter.SetCanRunImmediate(true);window.addEventListener("pointerrawupdate",e=>this._OnPointerRawUpdate(e))}else window.addEventListener("pointermove",e=>this._OnPointerEvent("pointermove",e));window.addEventListener("pointerup",e=>this._OnPointerEvent("pointerup",e));window.addEventListener("pointercancel",e=>this._OnPointerEvent("pointercancel",e))}else{window.addEventListener("mousedown",e=>{this._HandlePointerDownFocus(e);this._OnMouseEventAsPointer("pointerdown",
e)});window.addEventListener("mousemove",e=>this._OnMouseEventAsPointer("pointermove",e));window.addEventListener("mouseup",e=>this._OnMouseEventAsPointer("pointerup",e));window.addEventListener("touchstart",e=>{this._HandlePointerDownFocus(e);this._OnTouchEvent("pointerdown",e)});window.addEventListener("touchmove",e=>this._OnTouchEvent("pointermove",e));window.addEventListener("touchend",e=>this._OnTouchEvent("pointerup",e));window.addEventListener("touchcancel",e=>this._OnTouchEvent("pointercancel",
e))}const playFunc=()=>this._PlayPendingMedia();window.addEventListener("pointerup",playFunc,true);window.addEventListener("touchend",playFunc,true);window.addEventListener("click",playFunc,true);window.addEventListener("keydown",playFunc,true);window.addEventListener("gamepadconnected",playFunc,true)}_PostRuntimeEvent(name,data){this.PostToRuntime(name,data||null,DISPATCH_RUNTIME_ONLY)}_GetWindowInnerWidth(){return this._iRuntime._GetWindowInnerWidth()}_GetWindowInnerHeight(){return this._iRuntime._GetWindowInnerHeight()}_OnWindowResize(){const width=
this._GetWindowInnerWidth();const height=this._GetWindowInnerHeight();this._PostRuntimeEvent("window-resize",{"innerWidth":width,"innerHeight":height,"devicePixelRatio":window.devicePixelRatio,"isFullscreen":RuntimeInterface.IsDocumentFullscreen()});if(this._iRuntime.IsiOSWebView()){if(this._simulatedResizeTimerId!==-1)clearTimeout(this._simulatedResizeTimerId);this._OnSimulatedResize(width,height,0)}}_ScheduleSimulatedResize(width,height,count){if(this._simulatedResizeTimerId!==-1)clearTimeout(this._simulatedResizeTimerId);
this._simulatedResizeTimerId=setTimeout(()=>this._OnSimulatedResize(width,height,count),48)}_OnSimulatedResize(originalWidth,originalHeight,count){const width=this._GetWindowInnerWidth();const height=this._GetWindowInnerHeight();this._simulatedResizeTimerId=-1;if(width!=originalWidth||height!=originalHeight)this._PostRuntimeEvent("window-resize",{"innerWidth":width,"innerHeight":height,"devicePixelRatio":window.devicePixelRatio,"isFullscreen":RuntimeInterface.IsDocumentFullscreen()});else if(count<
10)this._ScheduleSimulatedResize(width,height,count+1)}_OnSetTargetOrientation(e){this._targetOrientation=e["targetOrientation"]}_TrySetTargetOrientation(){const orientation=this._targetOrientation;if(screen["orientation"]&&screen["orientation"]["lock"])screen["orientation"]["lock"](orientation).catch(err=>console.warn("[Construct 3] Failed to lock orientation: ",err));else try{let result=false;if(screen["lockOrientation"])result=screen["lockOrientation"](orientation);else if(screen["webkitLockOrientation"])result=
screen["webkitLockOrientation"](orientation);else if(screen["mozLockOrientation"])result=screen["mozLockOrientation"](orientation);else if(screen["msLockOrientation"])result=screen["msLockOrientation"](orientation);if(!result)console.warn("[Construct 3] Failed to lock orientation")}catch(err){console.warn("[Construct 3] Failed to lock orientation: ",err)}}_OnFullscreenChange(){const isDocFullscreen=RuntimeInterface.IsDocumentFullscreen();if(isDocFullscreen&&this._targetOrientation!=="any")this._TrySetTargetOrientation();
this.PostToRuntime("fullscreenchange",{"isFullscreen":isDocFullscreen,"innerWidth":this._GetWindowInnerWidth(),"innerHeight":this._GetWindowInnerHeight()})}_OnFullscreenError(e){console.warn("[Construct 3] Fullscreen request failed: ",e);this.PostToRuntime("fullscreenerror",{"isFullscreen":RuntimeInterface.IsDocumentFullscreen(),"innerWidth":this._GetWindowInnerWidth(),"innerHeight":this._GetWindowInnerHeight()})}_OnVisibilityChange(isHidden){if(isHidden)this._iRuntime._CancelAnimationFrame();else this._iRuntime._RequestAnimationFrame();
this.PostToRuntime("visibilitychange",{"hidden":isHidden})}_OnKeyEvent(name,e){if(e.key==="Backspace")PreventDefaultOnCanvasOrDoc(e);const code=KEY_CODE_ALIASES.get(e.code)||e.code;this._PostToRuntimeMaybeSync(name,{"code":code,"key":e.key,"which":e.which,"repeat":e.repeat,"altKey":e.altKey,"ctrlKey":e.ctrlKey,"metaKey":e.metaKey,"shiftKey":e.shiftKey,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT)}_OnMouseWheelEvent(name,e){this.PostToRuntime(name,{"clientX":e.clientX,"clientY":e.clientY,"pageX":e.pageX,
"pageY":e.pageY,"deltaX":e.deltaX,"deltaY":e.deltaY,"deltaZ":e.deltaZ,"deltaMode":e.deltaMode,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT)}_OnMouseEvent(name,e,opts){if(IsCompatibilityMouseEvent(e))return;this._PostToRuntimeMaybeSync(name,{"button":e.button,"buttons":e.buttons,"clientX":e.clientX,"clientY":e.clientY,"pageX":e.pageX,"pageY":e.pageY,"movementX":e.movementX||0,"movementY":e.movementY||0,"timeStamp":e.timeStamp},opts)}_OnMouseEventAsPointer(name,e){if(IsCompatibilityMouseEvent(e))return;
const pointerId=1;const lastButtons=this._mousePointerLastButtons;if(name==="pointerdown"&&lastButtons!==0)name="pointermove";else if(name==="pointerup"&&e.buttons!==0)name="pointermove";this._PostToRuntimeMaybeSync(name,{"pointerId":pointerId,"pointerType":"mouse","button":e.button,"buttons":e.buttons,"lastButtons":lastButtons,"clientX":e.clientX,"clientY":e.clientY,"pageX":e.pageX,"pageY":e.pageY,"movementX":e.movementX||0,"movementY":e.movementY||0,"width":0,"height":0,"pressure":0,"tangentialPressure":0,
"tiltX":0,"tiltY":0,"twist":0,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT);this._mousePointerLastButtons=e.buttons;this._OnMouseEvent(e.type,e,DISPATCH_SCRIPT_ONLY)}_OnPointerEvent(name,e){if(this._pointerRawUpdateRateLimiter&&name!=="pointermove")this._pointerRawUpdateRateLimiter.Reset();let lastButtons=0;if(e.pointerType==="mouse")lastButtons=this._mousePointerLastButtons;this._PostToRuntimeMaybeSync(name,{"pointerId":e.pointerId,"pointerType":e.pointerType,"button":e.button,"buttons":e.buttons,
"lastButtons":lastButtons,"clientX":e.clientX,"clientY":e.clientY,"pageX":e.pageX,"pageY":e.pageY,"movementX":(e.movementX||0)+this._pointerRawMovementX,"movementY":(e.movementY||0)+this._pointerRawMovementY,"width":e.width||0,"height":e.height||0,"pressure":e.pressure||0,"tangentialPressure":e["tangentialPressure"]||0,"tiltX":e.tiltX||0,"tiltY":e.tiltY||0,"twist":e["twist"]||0,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT);this._pointerRawMovementX=0;this._pointerRawMovementY=0;if(e.pointerType===
"mouse"){let mouseEventName="mousemove";if(name==="pointerdown")mouseEventName="mousedown";else if(name==="pointerup")mouseEventName="mouseup";this._OnMouseEvent(mouseEventName,e,DISPATCH_SCRIPT_ONLY);this._mousePointerLastButtons=e.buttons}}_OnPointerRawUpdate(e){if(this._lastPointerRawUpdateEvent){this._pointerRawMovementX+=this._lastPointerRawUpdateEvent.movementX||0;this._pointerRawMovementY+=this._lastPointerRawUpdateEvent.movementY||0}this._lastPointerRawUpdateEvent=e;this._pointerRawUpdateRateLimiter.Call()}_DoSendPointerRawUpdate(){this._OnPointerEvent("pointermove",
this._lastPointerRawUpdateEvent);this._lastPointerRawUpdateEvent=null}_OnTouchEvent(fireName,e){for(let i=0,len=e.changedTouches.length;i<len;++i){const t=e.changedTouches[i];this._PostToRuntimeMaybeSync(fireName,{"pointerId":t.identifier,"pointerType":"touch","button":0,"buttons":0,"lastButtons":0,"clientX":t.clientX,"clientY":t.clientY,"pageX":t.pageX,"pageY":t.pageY,"movementX":e.movementX||0,"movementY":e.movementY||0,"width":(t["radiusX"]||t["webkitRadiusX"]||0)*2,"height":(t["radiusY"]||t["webkitRadiusY"]||
0)*2,"pressure":t["force"]||t["webkitForce"]||0,"tangentialPressure":0,"tiltX":0,"tiltY":0,"twist":t["rotationAngle"]||0,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT)}}_HandlePointerDownFocus(e){if(window!==window.top)window.focus();if(this._IsElementCanvasOrDocument(e.target)&&document.activeElement&&!this._IsElementCanvasOrDocument(document.activeElement))document.activeElement.blur()}_IsElementCanvasOrDocument(elem){return!elem||elem===document||elem===window||elem===document.body||elem.tagName.toLowerCase()===
"canvas"}_AttachDeviceOrientationEvent(){if(this._attachedDeviceOrientationEvent)return;this._attachedDeviceOrientationEvent=true;window.addEventListener("deviceorientation",e=>this._OnDeviceOrientation(e));window.addEventListener("deviceorientationabsolute",e=>this._OnDeviceOrientationAbsolute(e))}_AttachDeviceMotionEvent(){if(this._attachedDeviceMotionEvent)return;this._attachedDeviceMotionEvent=true;window.addEventListener("devicemotion",e=>this._OnDeviceMotion(e))}_OnDeviceOrientation(e){this.PostToRuntime("deviceorientation",
{"absolute":!!e["absolute"],"alpha":e["alpha"]||0,"beta":e["beta"]||0,"gamma":e["gamma"]||0,"timeStamp":e.timeStamp,"webkitCompassHeading":e["webkitCompassHeading"],"webkitCompassAccuracy":e["webkitCompassAccuracy"]},DISPATCH_RUNTIME_AND_SCRIPT)}_OnDeviceOrientationAbsolute(e){this.PostToRuntime("deviceorientationabsolute",{"absolute":!!e["absolute"],"alpha":e["alpha"]||0,"beta":e["beta"]||0,"gamma":e["gamma"]||0,"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT)}_OnDeviceMotion(e){let accProp=
null;const acc=e["acceleration"];if(acc)accProp={"x":acc["x"]||0,"y":acc["y"]||0,"z":acc["z"]||0};let withGProp=null;const withG=e["accelerationIncludingGravity"];if(withG)withGProp={"x":withG["x"]||0,"y":withG["y"]||0,"z":withG["z"]||0};let rotationRateProp=null;const rotationRate=e["rotationRate"];if(rotationRate)rotationRateProp={"alpha":rotationRate["alpha"]||0,"beta":rotationRate["beta"]||0,"gamma":rotationRate["gamma"]||0};this.PostToRuntime("devicemotion",{"acceleration":accProp,"accelerationIncludingGravity":withGProp,
"rotationRate":rotationRateProp,"interval":e["interval"],"timeStamp":e.timeStamp},DISPATCH_RUNTIME_AND_SCRIPT)}_OnUpdateCanvasSize(e){const runtimeInterface=this.GetRuntimeInterface();const canvas=runtimeInterface.GetCanvas();canvas.style.width=e["styleWidth"]+"px";canvas.style.height=e["styleHeight"]+"px";canvas.style.marginLeft=e["marginLeft"]+"px";canvas.style.marginTop=e["marginTop"]+"px";if(this._isFirstSizeUpdate){canvas.style.display="";this._isFirstSizeUpdate=false}}_OnInvokeDownload(e){const url=
e["url"];const filename=e["filename"];const a=document.createElement("a");const body=document.body;a.textContent=filename;a.href=url;a.download=filename;body.appendChild(a);a.click();body.removeChild(a)}async _OnRasterSvgImage(e){const blob=e["blob"];const imageWidth=e["imageWidth"];const imageHeight=e["imageHeight"];const surfaceWidth=e["surfaceWidth"];const surfaceHeight=e["surfaceHeight"];const imageBitmapOpts=e["imageBitmapOpts"];const canvas=await self["C3_RasterSvgImageBlob"](blob,imageWidth,
imageHeight,surfaceWidth,surfaceHeight);let ret;if(imageBitmapOpts)ret=await createImageBitmap(canvas,imageBitmapOpts);else ret=await createImageBitmap(canvas);return{"imageBitmap":ret,"transferables":[ret]}}async _OnGetSvgImageSize(e){return await self["C3_GetSvgImageSize"](e["blob"])}async _OnAddStylesheet(e){await AddStyleSheet(e["url"])}_PlayPendingMedia(){const mediaToTryPlay=[...this._mediaPendingPlay];this._mediaPendingPlay.clear();if(!this._isSilent)for(const mediaElem of mediaToTryPlay){const playRet=
mediaElem.play();if(playRet)playRet.catch(err=>{if(!this._mediaRemovedPendingPlay.has(mediaElem))this._mediaPendingPlay.add(mediaElem)})}}TryPlayMedia(mediaElem){if(typeof mediaElem.play!=="function")throw new Error("missing play function");this._mediaRemovedPendingPlay.delete(mediaElem);let playRet;try{playRet=mediaElem.play()}catch(err){this._mediaPendingPlay.add(mediaElem);return}if(playRet)playRet.catch(err=>{if(!this._mediaRemovedPendingPlay.has(mediaElem))this._mediaPendingPlay.add(mediaElem)})}RemovePendingPlay(mediaElem){this._mediaPendingPlay.delete(mediaElem);
this._mediaRemovedPendingPlay.add(mediaElem)}SetSilent(s){this._isSilent=!!s}_OnHideCordovaSplash(){if(navigator["splashscreen"]&&navigator["splashscreen"]["hide"])navigator["splashscreen"]["hide"]()}_OnDebugHighlight(e){const show=e["show"];if(!show){if(this._debugHighlightElem)this._debugHighlightElem.style.display="none";return}if(!this._debugHighlightElem){this._debugHighlightElem=document.createElement("div");this._debugHighlightElem.id="inspectOutline";document.body.appendChild(this._debugHighlightElem)}const elem=
this._debugHighlightElem;elem.style.display="";elem.style.left=e["left"]-1+"px";elem.style.top=e["top"]-1+"px";elem.style.width=e["width"]+2+"px";elem.style.height=e["height"]+2+"px";elem.textContent=e["name"]}_OnRegisterSW(){if(window["C3_RegisterSW"])window["C3_RegisterSW"]()}_OnPostToDebugger(data){if(!window["c3_postToMessagePort"])return;data["from"]="runtime";window["c3_postToMessagePort"](data)}_InvokeFunctionFromJS(name,params){return this.PostToRuntimeAsync("js-invoke-function",{"name":name,
"params":params})}_OnAlert(e){alert(e["message"])}_OnWrapperMessage(msg){if(msg==="entered-fullscreen"){RuntimeInterface._SetWrapperIsFullscreenFlag(true);this._OnFullscreenChange()}else if(msg==="exited-fullscreen"){RuntimeInterface._SetWrapperIsFullscreenFlag(false);this._OnFullscreenChange()}else console.warn("Unknown wrapper message: ",msg)}};RuntimeInterface.AddDOMHandlerClass(HANDLER_CLASS)};


'use strict';{const DISPATCH_WORKER_SCRIPT_NAME="dispatchworker.js";const JOB_WORKER_SCRIPT_NAME="jobworker.js";self.JobSchedulerDOM=class JobSchedulerDOM{constructor(runtimeInterface){this._runtimeInterface=runtimeInterface;this._baseUrl=runtimeInterface.GetBaseURL();if(runtimeInterface.GetExportType()==="preview")this._baseUrl+="workers/";else this._baseUrl+=runtimeInterface.GetScriptFolder();this._maxNumWorkers=Math.min(navigator.hardwareConcurrency||2,16);this._dispatchWorker=null;this._jobWorkers=
[];this._inputPort=null;this._outputPort=null}async Init(){if(this._hasInitialised)throw new Error("already initialised");this._hasInitialised=true;const dispatchWorkerScriptUrl=this._runtimeInterface._GetWorkerURL(DISPATCH_WORKER_SCRIPT_NAME);this._dispatchWorker=await this._runtimeInterface.CreateWorker(dispatchWorkerScriptUrl,this._baseUrl,{name:"DispatchWorker"});const messageChannel=new MessageChannel;this._inputPort=messageChannel.port1;this._dispatchWorker.postMessage({"type":"_init","in-port":messageChannel.port2},
[messageChannel.port2]);this._outputPort=await this._CreateJobWorker()}async _CreateJobWorker(){const number=this._jobWorkers.length;const jobWorkerScriptUrl=this._runtimeInterface._GetWorkerURL(JOB_WORKER_SCRIPT_NAME);const jobWorker=await this._runtimeInterface.CreateWorker(jobWorkerScriptUrl,this._baseUrl,{name:"JobWorker"+number});const dispatchChannel=new MessageChannel;const outputChannel=new MessageChannel;this._dispatchWorker.postMessage({"type":"_addJobWorker","port":dispatchChannel.port1},
[dispatchChannel.port1]);jobWorker.postMessage({"type":"init","number":number,"dispatch-port":dispatchChannel.port2,"output-port":outputChannel.port2},[dispatchChannel.port2,outputChannel.port2]);this._jobWorkers.push(jobWorker);return outputChannel.port1}GetPortData(){return{"inputPort":this._inputPort,"outputPort":this._outputPort,"maxNumWorkers":this._maxNumWorkers}}GetPortTransferables(){return[this._inputPort,this._outputPort]}}};


'use strict';{if(window["C3_IsSupported"]){const enableWorker=true;window["c3_runtimeInterface"]=new self.RuntimeInterface({useWorker:enableWorker,workerMainUrl:"workermain.js",engineScripts:["scripts/c3runtime.js"],projectScripts:[],mainProjectScript:"",scriptFolder:"scripts/",workerDependencyScripts:["box2d.wasm.js"],exportType:"html5"})}};
'use strict';{const DOM_COMPONENT_ID="touch";const HANDLER_CLASS=class TouchDOMHandler extends self.DOMHandler{constructor(iRuntime){super(iRuntime,DOM_COMPONENT_ID);this.AddRuntimeMessageHandler("request-permission",e=>this._OnRequestPermission(e))}async _OnRequestPermission(e){const type=e["type"];let result=true;if(type===0)result=await this._RequestOrientationPermission();else if(type===1)result=await this._RequestMotionPermission();this.PostToRuntime("permission-result",{"type":type,"result":result})}async _RequestOrientationPermission(){if(!self["DeviceOrientationEvent"]||
!self["DeviceOrientationEvent"]["requestPermission"])return true;try{const state=await self["DeviceOrientationEvent"]["requestPermission"]();return state==="granted"}catch(err){console.warn("[Touch] Failed to request orientation permission: ",err);return false}}async _RequestMotionPermission(){if(!self["DeviceMotionEvent"]||!self["DeviceMotionEvent"]["requestPermission"])return true;try{const state=await self["DeviceMotionEvent"]["requestPermission"]();return state==="granted"}catch(err){console.warn("[Touch] Failed to request motion permission: ",
err);return false}}};self.RuntimeInterface.AddDOMHandlerClass(HANDLER_CLASS)};
'use strict';{const admobConfiguration={};let configureOptions=null;let startPromise=null;const testAdUnitsiOS={"banner":"ca-app-pub-3940256099942544/2934735716","interstitial":"ca-app-pub-3940256099942544/4411468910","rewarded":"ca-app-pub-3940256099942544/1712485313","rewardedInterstitial":"ca-app-pub-3940256099942544/6978759866"};let idfaAvailable=false;function Success(callback,message){callback(null,message)}function Failure(callback,message){callback(message,null)}function UpdateAdmobPlusRequest(requestProperty,
propertyValue){admobConfiguration[requestProperty]=propertyValue;self["admob"]["configRequest"](admobConfiguration)}async function StartAdmobPlus(resolver,debug){debug=typeof debug!=="undefined"?debug:configureOptions.debug;if(startPromise)return startPromise;startPromise=new Promise((resolve,reject)=>{document.addEventListener("deviceready",async()=>{try{await self["admob"]["start"]();if(!!debug){const testId=await TestId();UpdateAdmobPlusRequest("testDeviceIds",[testId])}resolve(true)}catch(error){resolve(false);
Failure(resolver,"Initialization failure")}})});return startPromise}function HasInitConfigurationOptions(){return!!configureOptions}function SetInitConfigureOptions(id,pubID,privacyPolicy,showFree,showConsent,debug,debugLocation){if(configureOptions)return;configureOptions={id,pubID,privacyPolicy,showFree,showConsent,debug,debugLocation};Object.freeze(configureOptions)}async function TestId(){if(self["cordova"]["platformId"]==="android")return self.C3AdUtilsMD5(self["device"]["uuid"]).toUpperCase();
if(self["cordova"]["platformId"]==="ios"){const idfaPlugin=self["cordova"]["plugins"]["idfa"];const idfaInfo=await idfaPlugin.getInfo();if(!idfaInfo.trackingLimited){idfaAvailable=true;return self.C3AdUtilsMD5(idfaInfo.idfa).toUpperCase()}}}function GetAdUnit(adUnit,type){if(self["cordova"]["platformId"]==="android")return adUnit;if(self["cordova"]["platformId"]==="ios"){const hasTestAdUnit=!!testAdUnitsiOS[type];if(configureOptions.debug&&!idfaAvailable&&hasTestAdUnit){console.log("[C3 advert]",
"USING TEST AD UNITS");return testAdUnitsiOS[type]}return adUnit}}self.C3AdUtils={Success:Success,Failure:Failure,StartAdmobPlus:StartAdmobPlus,UpdateAdmobPlusRequest:UpdateAdmobPlusRequest,SetInitConfigureOptions:SetInitConfigureOptions,HasInitConfigurationOptions:HasInitConfigurationOptions,GetAdUnit:GetAdUnit,get ConfigurationOptions(){return configureOptions},get TestId(){return TestId()}}};
'use strict';{const C3AdUtils=self.C3AdUtils;const Success=C3AdUtils.Success;const Failure=C3AdUtils.Failure;const BANNER=0;const LARGE_BANNER=1;const MEDIUM_RECTANGLE=2;const FULL_BANNER=3;const LEADERBOARD=4;const SMART_BANNER=5;const Events={get LOAD(){return self["admob"]["Events"]["bannerLoad"]},get LOAD_FAIL(){return self["admob"]["Events"]["bannerLoadFail"]}};class C3BannerAd{constructor(id,size,position,resolver){if(!id)return Failure(resolver,"Unit ID not specified");if(!size)return Failure(resolver,
"Ad size not specified");if(!position)return Failure(resolver,"Ad position not specified");this._adUnitId=id;this._position=position;this._size="";switch(size){case "portrait":{this._size=SMART_BANNER;break}case "landscape":{this._size=SMART_BANNER;break}case "standard":{this._size=BANNER;break}case "large":{this._size=LARGE_BANNER;break}case "medium":{this._size=MEDIUM_RECTANGLE;break}case "full":{this._size=FULL_BANNER;break}case "leaderboard":{this._size=LEADERBOARD;break}default:{this._size=SMART_BANNER}}this._ad=
null;this._adLoading=false;this._adShowing=false}Load(adPersonalization,resolver){if(this._ad)return Success(resolver,"banner ad loaded");_AddLoadListeners.call(this,resolver);const options={"adUnitId":C3AdUtils.GetAdUnit(this._adUnitId,"banner"),"size":this._size,"position":this._position,"offset":0,"npa":adPersonalization==="NON_PERSONALIZED"?"1":"0"};this._ad=new self["admob"]["BannerAd"](options);this._ad["load"]()}async Show(resolver){if(!this._ad)return Failure(resolver,"banner ad not created");
if(this._adLoading)return Failure(resolver,"banner ad still loading");if(this._adShowing)return Success(resolver,"banner ad already shown");await this._ad["show"]();this._adShowing=true;Success(resolver,"banner shown")}async Hide(resolver){if(!this._ad)return Failure(resolver,"banner ad not created");if(this._adLoading)return Failure(resolver,"banner ad still loading");if(!this._adShowing)return Success(resolver,"banner ad not being shown");await this._ad["hide"]();this._adShowing=false;Success(resolver,
"banner ad hidden")}IsLoading(){return this._adLoading}IsShowing(){return this._adShowing}}function _AddLoadListeners(resolver){const onLoad=event=>{this._adLoading=false;Success(resolver,"banner ad loaded");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};const onFailLoad=event=>{this._ad=null;this._adLoading=false;Failure(resolver,"banner ad failed to load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,
onFailLoad)};document.addEventListener(Events.LOAD,onLoad);document.addEventListener(Events.LOAD_FAIL,onFailLoad)}self.C3BannerAd=C3BannerAd};
'use strict';{const C3AdUtils=self.C3AdUtils;const Success=C3AdUtils.Success;const Failure=C3AdUtils.Failure;const Events={get LOAD(){return self["admob"]["Events"]["interstitialLoad"]},get LOAD_FAIL(){return self["admob"]["Events"]["interstitialLoadFail"]},get SHOW(){return self["admob"]["Events"]["interstitialShow"]},get SHOW_FAIL(){return self["admob"]["Events"]["interstitialShowFail"]},get DISMISS(){return self["admob"]["Events"]["interstitialDismiss"]}};class C3InterstitialAd{constructor(id,
resolver){if(!id)return Failure(resolver,"Unit ID not specified");this._adUnitId=id;this._ad=null;this._adLoading=false;this._adShowing=false;this._loadSuccess=false;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise();document.addEventListener(Events.DISMISS,async event=>{this._adShowing=false;this._adLoading=true;this._loadSuccess=false;this._loadPromise=null;this._loadPromise=this.GetLoadPromise();_AddLoadListeners.call(this);await this._ad["load"]()})}GetLoadPromise(){if(this._loadPromise)return this._loadPromise;
this._loadPromise=new Promise(resolve=>{this._loadPromiseResolver=resolve});return this._loadPromise}ResolveLoadPromise(result){this._loadSuccess=result;if(this._loadPromiseResolver)this._loadPromiseResolver(result);this._loadPromise=null;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise()}Load(adPersonalization,resolver){const options={"adUnitId":C3AdUtils.GetAdUnit(this._adUnitId,"interstitial"),"npa":adPersonalization==="NON_PERSONALIZED"?"1":"0"};this._adLoading=true;this._adShowing=
false;this._loadSuccess=false;this._loadPromise=null;this._loadPromise=this.GetLoadPromise();this._ad=new self["admob"]["InterstitialAd"](options);_AddLoadListeners.call(this,resolver);this._ad["load"]()}async Show(resolver){if(!this._ad)return Failure(resolver,"interstitial ad not created");if(this._adShowing)return Success(resolver,"interstitial ad already shown");const show_ad=async()=>{if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else{_AddLoadListeners.call(this);
this._loadSuccess=false;this._loadPromise=null;this._ad["load"]();await this.GetLoadPromise();if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else Failure(resolver,"interstitial ad failed to load")}};if(this._adLoading){await this.GetLoadPromise();await show_ad()}else await show_ad()}IsLoading(){return this._adLoading}IsShowing(){return this._adShowing}}function _AddLoadListeners(resolver){const onLoad=event=>{this._adLoading=false;this.ResolveLoadPromise(true);
if(resolver)Success(resolver,"interstitial ad load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};const onFailLoad=event=>{this._adLoading=false;this.ResolveLoadPromise(false);if(resolver)Failure(resolver,"interstitial ad failed to load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};document.addEventListener(Events.LOAD,onLoad);document.addEventListener(Events.LOAD_FAIL,onFailLoad)}
function _AddShowListeners(resolver){const onShow=event=>{this._adShowing=true;if(resolver)Success(resolver,"interstitial ad show");document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail)};const onShowFail=event=>{this._adShowing=false;if(resolver)Failure(resolver,"interstitial ad failed to show");document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail)};document.addEventListener(Events.SHOW,onShow);
document.addEventListener(Events.SHOW_FAIL,onShowFail)}self.C3InterstitialAd=C3InterstitialAd};
'use strict';{const C3AdUtils=self.C3AdUtils;const Success=C3AdUtils.Success;const Failure=C3AdUtils.Failure;const Events={get LOAD(){return self["admob"]["Events"]["rewardedLoad"]},get LOAD_FAIL(){return self["admob"]["Events"]["rewardedLoadFail"]},get SHOW(){return self["admob"]["Events"]["rewardedShow"]},get SHOW_FAIL(){return self["admob"]["Events"]["rewardedShowFail"]},get DISMISS(){return self["admob"]["Events"]["rewardedDismiss"]},get REWARD(){return self["admob"]["Events"]["rewardedReward"]}};
class C3RewardedAd{constructor(id,resolver){if(!id)return Failure(resolver,"Unit ID not specified");this._adUnitId=id;this._ad=null;this._adLoading=false;this._adShowing=false;this._loadSuccess=false;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise();this._reward=null}GetLoadPromise(){if(this._loadPromise)return this._loadPromise;this._loadPromise=new Promise(resolve=>{this._loadPromiseResolver=resolve});return this._loadPromise}ResolveLoadPromise(result){this._loadSuccess=result;
if(this._loadPromiseResolver)this._loadPromiseResolver(result);this._loadPromise=null;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise()}Load(adPersonalization,resolver){const options={"adUnitId":C3AdUtils.GetAdUnit(this._adUnitId,"rewarded"),"npa":adPersonalization==="NON_PERSONALIZED"?"1":"0"};this._adLoading=true;this._adShowing=false;this._loadSuccess=false;this._loadPromise=null;this._loadPromise=this.GetLoadPromise();this._ad=new self["admob"]["RewardedAd"](options);_AddLoadListeners.call(this,
resolver);this._ad["load"]()}async Show(resolver){if(!this._ad)return Failure(resolver,"rewarded ad not created");if(this._adShowing)return Success(resolver,"rewarded ad already shown");const show_ad=async()=>{if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else{_AddLoadListeners.call(this);this._loadSuccess=false;this._loadPromise=null;this._ad["load"]();await this.GetLoadPromise();if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else Failure(resolver,
"rewarded ad failed to load")}};if(this._adLoading){await this.GetLoadPromise();await show_ad()}else await show_ad()}IsLoading(){return this._adLoading}IsShowing(){return this._adShowing}}function _AddLoadListeners(resolver){const onLoad=event=>{this._adLoading=false;this.ResolveLoadPromise(true);if(resolver)Success(resolver,"rewarded ad load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};const onFailLoad=event=>{this._adLoading=false;
this.ResolveLoadPromise(false);if(resolver)Failure(resolver,"rewarded ad failed to load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};document.addEventListener(Events.LOAD,onLoad);document.addEventListener(Events.LOAD_FAIL,onFailLoad)}function _AddShowListeners(resolver){const onShow=event=>{this._adShowing=true};const onReward=event=>{this._reward=event.reward};const onShowFail=event=>{this._adShowing=false;if(resolver)Failure(resolver,
"rewarded ad failed to show");document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail);document.removeEventListener(Events.REWARD,onReward);document.removeEventListener(Events.DISMISS,onDismiss)};const onDismiss=event=>{if(this._reward!==null){const type=String(this._reward.type);const amount=String(this._reward.amount);if(resolver)Success(resolver,JSON.stringify([type,amount]))}else if(resolver)Failure(resolver,"closed with no reward");this._reward=
null;this._adShowing=false;this._adLoading=true;this._loadSuccess=false;this._loadPromise=null;this._loadPromise=this.GetLoadPromise();_AddLoadListeners.call(this);this._ad["load"]();document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail);document.removeEventListener(Events.REWARD,onReward);document.removeEventListener(Events.DISMISS,onDismiss)};document.addEventListener(Events.SHOW,onShow);document.addEventListener(Events.SHOW_FAIL,onShowFail);document.addEventListener(Events.REWARD,
onReward);document.addEventListener(Events.DISMISS,onDismiss)}self.C3RewardedAd=C3RewardedAd};
'use strict';{const C3AdUtils=self.C3AdUtils;const Success=C3AdUtils.Success;const Failure=C3AdUtils.Failure;const Events={get LOAD(){return self["admob"]["Events"]["rewardedInterstitialLoad"]},get LOAD_FAIL(){return self["admob"]["Events"]["rewardedInterstitialLoadFail"]},get SHOW(){return self["admob"]["Events"]["rewardedInterstitialShow"]},get SHOW_FAIL(){return self["admob"]["Events"]["rewardedInterstitialShowFail"]},get DISMISS(){return self["admob"]["Events"]["rewardedInterstitialDismiss"]},
get REWARD(){return self["admob"]["Events"]["rewardedInterstitialReward"]}};class C3RewardedInterstitialAd{constructor(id,resolver){if(!id)return Failure(resolver,"Unit ID not specified");this._adUnitId=id;this._ad=null;this._adLoading=false;this._adShowing=false;this._loadSuccess=false;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise();this._reward=null}GetLoadPromise(){if(this._loadPromise)return this._loadPromise;this._loadPromise=new Promise(resolve=>{this._loadPromiseResolver=
resolve});return this._loadPromise}ResolveLoadPromise(result){this._loadSuccess=result;if(this._loadPromiseResolver)this._loadPromiseResolver(result);this._loadPromise=null;this._loadPromiseResolver=null;this._loadPromise=this.GetLoadPromise()}Load(adPersonalization,resolver){const options={"adUnitId":C3AdUtils.GetAdUnit(this._adUnitId,"rewardedInterstitial"),"npa":adPersonalization==="NON_PERSONALIZED"?"1":"0"};this._adLoading=true;this._adShowing=false;this._loadSuccess=false;this._loadPromise=
null;this._loadPromise=this.GetLoadPromise();this._ad=new self["admob"]["RewardedInterstitialAd"](options);_AddLoadListeners.call(this,resolver);this._ad["load"]()}async Show(resolver){if(!this._ad)return Failure(resolver,"rewarded interstitial ad not created");if(this._adShowing)return Success(resolver,"rewarded interstitial ad already shown");const show_ad=async()=>{if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else{_AddLoadListeners.call(this);this._loadSuccess=
false;this._loadPromise=null;this._ad["load"]();await this.GetLoadPromise();if(this._loadSuccess){_AddShowListeners.call(this,resolver);await this._ad["show"]()}else Failure(resolver,"rewarded interstitial ad failed to load")}};if(this._adLoading){await this.GetLoadPromise();await show_ad()}else await show_ad()}IsLoading(){return this._adLoading}IsShowing(){return this._adShowing}}function _AddLoadListeners(resolver){const onLoad=event=>{this._adLoading=false;this.ResolveLoadPromise(true);if(resolver)Success(resolver,
"rewarded interstitial ad load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};const onFailLoad=event=>{this._adLoading=false;this.ResolveLoadPromise(false);if(resolver)Failure(resolver,"rewarded interstitial ad failed to load");document.removeEventListener(Events.LOAD,onLoad);document.removeEventListener(Events.LOAD_FAIL,onFailLoad)};document.addEventListener(Events.LOAD,onLoad);document.addEventListener(Events.LOAD_FAIL,onFailLoad)}function _AddShowListeners(resolver){const onShow=
event=>{this._adShowing=true};const onReward=event=>{this._reward=event.reward};const onShowFail=event=>{this._adShowing=false;if(resolver)Failure(resolver,"rewarded interstitial ad failed to show");document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail);document.removeEventListener(Events.REWARD,onReward);document.removeEventListener(Events.DISMISS,onDismiss)};const onDismiss=event=>{if(this._reward!==null){const type=String(this._reward.type);const amount=
String(this._reward.amount);if(resolver)Success(resolver,JSON.stringify([type,amount]))}else if(resolver)Failure(resolver,"closed with no reward");this._reward=null;this._adShowing=false;this._adLoading=true;this._loadSuccess=false;this._loadPromise=null;this._loadPromise=this.GetLoadPromise();_AddLoadListeners.call(this);this._ad["load"]();document.removeEventListener(Events.SHOW,onShow);document.removeEventListener(Events.SHOW_FAIL,onShowFail);document.removeEventListener(Events.REWARD,onReward);
document.removeEventListener(Events.DISMISS,onDismiss)};document.addEventListener(Events.SHOW,onShow);document.addEventListener(Events.SHOW_FAIL,onShowFail);document.addEventListener(Events.REWARD,onReward);document.addEventListener(Events.DISMISS,onDismiss)}self.C3RewardedInterstitialAd=C3RewardedInterstitialAd};
'use strict';{const C3AdUtils=self.C3AdUtils;const Success=C3AdUtils.Success;const Failure=C3AdUtils.Failure;const IOS=self["cordova"]?self["cordova"]["platformId"]==="ios":false;const ANDROID=self["cordova"]?self["cordova"]["platformId"]==="android":false;const UNKNOWN=ANDROID?0:0;const NOT_REQUIRED=ANDROID?1:2;const REQUIRED=ANDROID?2:1;const OBTAINED=ANDROID?3:3;class C3Consent{constructor(){this._adPersonalization="UNKNOWN";this._inEEAorUnknown="";this._consentStatusIndex=0;this._consentStatusString=
"UNKNOWN";this._trackingStatusString="not-determined";this._hasConsentForm=false}async Reset(){if(!!C3AdUtils.ConfigurationOptions.debug)await self["consent"]["reset"]()}GetAdPersonalization(){return this._adPersonalization}async RequestTrackingAuthorization(){if(IOS)await self["admob"]["requestTrackingAuthorization"]()}async GetTrackingAuthorizationStatus(){if(ANDROID)return this._trackingStatusString="not-determined";const idfaPlugin=self["cordova"]["plugins"]["idfa"];const idfaInfo=await idfaPlugin.getInfo();
if(!idfaInfo.trackingLimited)return this._trackingStatusString="authorized";switch(idfaInfo.trackingPermission){case idfaPlugin.TRACKING_PERMISSION_NOT_DETERMINED:{return this._trackingStatusString="not-determined"}case idfaPlugin.TRACKING_PERMISSION_RESTRICTED:{return this._trackingStatusString="denied"}case idfaPlugin.TRACKING_PERMISSION_DENIED:{return this._trackingStatusString="denied"}case idfaPlugin.TRACKING_PERMISSION_AUTHORIZED:{return this._trackingStatusString="authorized"}}}async RequestIDFA(resolver){if(ANDROID)return Success(resolver,
"not-determined");if(IOS){await _UpdateRequestLocationInEEAorUnknown.call(this);if(this._inEEAorUnknown==="true")await this.RequestTrackingAuthorization();else{await this.GetTrackingAuthorizationStatus();if(this._trackingStatusString==="not-determined"){await _HasConsentForm.call(this);if(this._hasConsentForm)await this.ShowIDFAMessage();else await this.RequestTrackingAuthorization()}}await this.GetTrackingAuthorizationStatus();return Success(resolver,this._trackingStatusString)}}async RequestInfoUpdateForTesting(debug,
debugLocation,resolver){const ret=await _RequestInfoUpdateForTesting.call(this,debug,debugLocation,error=>{if(error)Failure(resolver,error.message);else Failure(resolver,"requestInfoUpdate error")});return ret}async RequestInfoUpdateForTestingSkipErrors(debug,debugLocation,resolver){await _RequestInfoUpdateForTesting.call(this,debug,debugLocation)}async ShowConsentForm(showConsent,showOutOfEEA=false){await _UpdateConsentStatus.call(this);switch(showConsent){case "eu":{const hasConsentForm=await _HasConsentForm.call(this);
const needsConsent=_NeedsConsent.call(this);if(needsConsent&&hasConsentForm){const form=await self["consent"]["loadForm"]();await form.show()}break}case "always":{const hasConsentForm=await _HasConsentForm.call(this);const isInEEA=await _UpdateRequestLocationInEEAorUnknown.call(this);if(hasConsentForm&&isInEEA==="true"){const form=await self["consent"]["loadForm"]();await form.show()}else if(hasConsentForm&&showOutOfEEA){const form=await self["consent"]["loadForm"]();await form.show()}break}}await _UpdateConsentStatus.call(this);
await _UpdateRequestLocationInEEAorUnknown.call(this);await _UpdateAdPersonalization.call(this)}async ShowIDFAMessage(showConsent){await this.ShowConsentForm("always",true)}async UpdateConsentStatus(){await _UpdateConsentStatus.call(this);await _UpdateRequestLocationInEEAorUnknown.call(this);await _UpdateAdPersonalization.call(this)}async SuccessResponse(resolver){await this.GetTrackingAuthorizationStatus();Success(resolver,`${this._consentStatusString}&&${this._trackingStatusString}&&${this._inEEAorUnknown}`)}async StatusUpdateSuccessResponse(resolver){await this.UpdateConsentStatus();
await this.GetTrackingAuthorizationStatus();Success(resolver,`${this._consentStatusString}&&${this._trackingStatusString}&&${this._inEEAorUnknown}`)}}async function _HasConsentForm(){const formStatus=await self["consent"]["getFormStatus"]();this._hasConsentForm=formStatus===self["consent"]["FormStatus"]["Available"];return this._hasConsentForm}async function _UpdateConsentStatus(){const status=await self["consent"]["getConsentStatus"]();this._consentStatusIndex=status;switch(this._consentStatusIndex){case REQUIRED:{return this._consentStatusString=
"REQUIRED"}case NOT_REQUIRED:{return this._consentStatusString="NOT_REQUIRED"}case OBTAINED:{return this._consentStatusString="OBTAINED"}case UNKNOWN:{return this._consentStatusString="UNKNOWN"}}}function _NeedsConsent(){switch(this._consentStatusIndex){case REQUIRED:{return true}case NOT_REQUIRED:{return false}case OBTAINED:{return false}case UNKNOWN:{return true}}}function _UpdateAdPersonalization(){switch(this._consentStatusIndex){case REQUIRED:{return this._adPersonalization="NON_PERSONALIZED"}case NOT_REQUIRED:{return this._adPersonalization=
"PERSONALIZED"}case OBTAINED:{return this._adPersonalization="PERSONALIZED"}case UNKNOWN:{return this._adPersonalization="NON_PERSONALIZED"}}}async function _UpdateRequestLocationInEEAorUnknown(){if(ANDROID)switch(this._consentStatusIndex){case REQUIRED:{return this._inEEAorUnknown="true"}case NOT_REQUIRED:{return this._inEEAorUnknown="false"}case OBTAINED:{return this._inEEAorUnknown="true"}case UNKNOWN:{return this._inEEAorUnknown="true"}}if(IOS){const gdprApplies=await _GetValueFromNativeStorage.call(this,
"IABTCF_gdprApplies","getInt");if(gdprApplies)return this._inEEAorUnknown="true";else return this._inEEAorUnknown="false"}}async function _GetValueFromNativeStorage(name,method){return new Promise((resolve,reject)=>{self["NativeStorage"][method](name,res=>resolve(res),error=>resolve(1))})}async function _RequestInfoUpdateForTesting(debug,debugLocation,onError){let debugGeography="";let testDeviceIds=null;if(!!debug){switch(debugLocation){case "EEA":{debugGeography=self["consent"]["DebugGeography"]["EEA"];
break}case "NOT_EEA":{debugGeography=self["consent"]["DebugGeography"]["NotEEA"];break}default:{debugGeography=self["consent"]["DebugGeography"]["Disabled"];break}}const testId=await C3AdUtils.TestId;testDeviceIds=[testId]}try{if(!!debug)await self["consent"]["requestInfoUpdate"]({debugGeography:debugGeography,testDeviceIds:testDeviceIds});else await self["consent"]["requestInfoUpdate"]();return true}catch(error){if(onError)onError(error);return false}}self.C3Consent=new C3Consent};
'use strict';{const md5cycle=(x,k)=>{let a=x[0];let b=x[1];let c=x[2];let d=x[3];a=ff(a,b,c,d,k[0],7,-680876936);d=ff(d,a,b,c,k[1],12,-389564586);c=ff(c,d,a,b,k[2],17,606105819);b=ff(b,c,d,a,k[3],22,-1044525330);a=ff(a,b,c,d,k[4],7,-176418897);d=ff(d,a,b,c,k[5],12,1200080426);c=ff(c,d,a,b,k[6],17,-1473231341);b=ff(b,c,d,a,k[7],22,-45705983);a=ff(a,b,c,d,k[8],7,1770035416);d=ff(d,a,b,c,k[9],12,-1958414417);c=ff(c,d,a,b,k[10],17,-42063);b=ff(b,c,d,a,k[11],22,-1990404162);a=ff(a,b,c,d,k[12],7,1804603682);
d=ff(d,a,b,c,k[13],12,-40341101);c=ff(c,d,a,b,k[14],17,-1502002290);b=ff(b,c,d,a,k[15],22,1236535329);a=gg(a,b,c,d,k[1],5,-165796510);d=gg(d,a,b,c,k[6],9,-1069501632);c=gg(c,d,a,b,k[11],14,643717713);b=gg(b,c,d,a,k[0],20,-373897302);a=gg(a,b,c,d,k[5],5,-701558691);d=gg(d,a,b,c,k[10],9,38016083);c=gg(c,d,a,b,k[15],14,-660478335);b=gg(b,c,d,a,k[4],20,-405537848);a=gg(a,b,c,d,k[9],5,568446438);d=gg(d,a,b,c,k[14],9,-1019803690);c=gg(c,d,a,b,k[3],14,-187363961);b=gg(b,c,d,a,k[8],20,1163531501);a=gg(a,
b,c,d,k[13],5,-1444681467);d=gg(d,a,b,c,k[2],9,-51403784);c=gg(c,d,a,b,k[7],14,1735328473);b=gg(b,c,d,a,k[12],20,-1926607734);a=hh(a,b,c,d,k[5],4,-378558);d=hh(d,a,b,c,k[8],11,-2022574463);c=hh(c,d,a,b,k[11],16,1839030562);b=hh(b,c,d,a,k[14],23,-35309556);a=hh(a,b,c,d,k[1],4,-1530992060);d=hh(d,a,b,c,k[4],11,1272893353);c=hh(c,d,a,b,k[7],16,-155497632);b=hh(b,c,d,a,k[10],23,-1094730640);a=hh(a,b,c,d,k[13],4,681279174);d=hh(d,a,b,c,k[0],11,-358537222);c=hh(c,d,a,b,k[3],16,-722521979);b=hh(b,c,d,a,
k[6],23,76029189);a=hh(a,b,c,d,k[9],4,-640364487);d=hh(d,a,b,c,k[12],11,-421815835);c=hh(c,d,a,b,k[15],16,530742520);b=hh(b,c,d,a,k[2],23,-995338651);a=ii(a,b,c,d,k[0],6,-198630844);d=ii(d,a,b,c,k[7],10,1126891415);c=ii(c,d,a,b,k[14],15,-1416354905);b=ii(b,c,d,a,k[5],21,-57434055);a=ii(a,b,c,d,k[12],6,1700485571);d=ii(d,a,b,c,k[3],10,-1894986606);c=ii(c,d,a,b,k[10],15,-1051523);b=ii(b,c,d,a,k[1],21,-2054922799);a=ii(a,b,c,d,k[8],6,1873313359);d=ii(d,a,b,c,k[15],10,-30611744);c=ii(c,d,a,b,k[6],15,
-1560198380);b=ii(b,c,d,a,k[13],21,1309151649);a=ii(a,b,c,d,k[4],6,-145523070);d=ii(d,a,b,c,k[11],10,-1120210379);c=ii(c,d,a,b,k[2],15,718787259);b=ii(b,c,d,a,k[9],21,-343485551);x[0]=add32(a,x[0]);x[1]=add32(b,x[1]);x[2]=add32(c,x[2]);x[3]=add32(d,x[3])};const cmn=(q,a,b,x,s,t)=>{a=add32(add32(a,q),add32(x,t));return add32(a<<s|a>>>32-s,b)};const ff=(a,b,c,d,x,s,t)=>{return cmn(b&c|~b&d,a,b,x,s,t)};const gg=(a,b,c,d,x,s,t)=>{return cmn(b&d|c&~d,a,b,x,s,t)};const hh=(a,b,c,d,x,s,t)=>{return cmn(b^
c^d,a,b,x,s,t)};const ii=(a,b,c,d,x,s,t)=>{return cmn(c^(b|~d),a,b,x,s,t)};const md51=s=>{const n=s.length;const state=[1732584193,-271733879,-1732584194,271733878];let i;for(i=64;i<=s.length;i+=64)md5cycle(state,md5blk(s.substring(i-64,i)));s=s.substring(i-64);const tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<s.length;i++)tail[i>>2]|=s.charCodeAt(i)<<(i%4<<3);tail[i>>2]|=128<<(i%4<<3);if(i>55){md5cycle(state,tail);for(i=0;i<16;i++)tail[i]=0}tail[14]=n*8;md5cycle(state,tail);return state};const md5blk=
s=>{const md5blks=[];for(let i=0;i<64;i+=4)md5blks[i>>2]=s.charCodeAt(i)+(s.charCodeAt(i+1)<<8)+(s.charCodeAt(i+2)<<16)+(s.charCodeAt(i+3)<<24);return md5blks};const hex_chr="0123456789abcdef".split("");const rhex=n=>{let s="";for(let j=0;j<4;j++)s+=hex_chr[n>>j*8+4&15]+hex_chr[n>>j*8&15];return s};const hex=x=>{for(let i=0;i<x.length;i++)x[i]=rhex(x[i]);return x.join("")};const md5=s=>{return hex(md51(s))};let add32=(a,b)=>{return a+b&4294967295};if(md5("hello")!="5d41402abc4b2a76b9719d911017c592"){let add32=
(x,y)=>{const lsw=(x&65535)+(y&65535);const msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&65535}}self.C3AdUtilsMD5=md5};
'use strict';{const C3AdUtils=self.C3AdUtils;const C3Consent=self.C3Consent;const C3BannerAd=self.C3BannerAd;const C3InterstitialAd=self.C3InterstitialAd;const C3RewardedAd=self.C3RewardedAd;const C3RewardedInterstitialAd=self.C3RewardedInterstitialAd;let bannerAd=null;let interstitialAd=null;let videoAd=null;let rewardedAd=null;let rewardedInterstitialAd=null;const api={};const addHandler=(name,fn)=>{api[name]=fn};addHandler("CreateBannerAdvert",async(id,size,debug,position,fn)=>{if(!await C3AdUtils.StartAdmobPlus(fn,
debug))return;const adPersonalization=await C3Consent.GetAdPersonalization();if(!bannerAd)bannerAd=new C3BannerAd(id,size,position,fn);bannerAd.Load(adPersonalization,fn)});addHandler("ShowBannerAdvert",async fn=>{if(!bannerAd)return C3AdUtils.Failure(fn,"banner ad not created");bannerAd.Show(fn)});addHandler("HideBannerAdvert",async fn=>{if(!bannerAd)return C3AdUtils.Failure(fn,"banner ad not created");bannerAd.Hide(fn)});addHandler("CreateInterstitialAdvert",async(id,debug,fn)=>{if(interstitialAd)return C3AdUtils.Success(fn,
"interstitial ad already created");if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;const adPersonalization=await C3Consent.GetAdPersonalization();interstitialAd=new C3InterstitialAd(id,fn);interstitialAd.Load(adPersonalization,fn)});addHandler("ShowInterstitialAdvert",async fn=>{if(!interstitialAd)return C3AdUtils.Failure(fn,"interstitial ad not created");interstitialAd.Show(fn)});addHandler("CreateVideoAdvert",async(id,debug,fn)=>{if(videoAd||rewardedAd)return C3AdUtils.Success(fn,"video ad already created");
if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;const adPersonalization=await C3Consent.GetAdPersonalization();videoAd=new C3RewardedAd(id,fn);videoAd.Load(adPersonalization,fn)});addHandler("ShowVideoAdvert",async fn=>{if(!videoAd)return C3AdUtils.Failure(fn,"video ad not created");videoAd.Show(fn)});addHandler("CreateRewardedAdvert",async(id,debug,fn)=>{if(rewardedAd||videoAd)return C3AdUtils.Success(fn,"rewarded ad already created");if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;const adPersonalization=
await C3Consent.GetAdPersonalization();rewardedAd=new C3RewardedAd(id,fn);rewardedAd.Load(adPersonalization,fn)});addHandler("ShowRewardedAdvert",async fn=>{if(!rewardedAd)return C3AdUtils.Failure(fn,"rewarded ad not created");rewardedAd.Show(fn)});addHandler("CreateRewardedInterstitialAdvert",async(id,debug,fn)=>{if(rewardedInterstitialAd)return C3AdUtils.Success(fn,"rewarded interstitial ad already created");if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;const adPersonalization=await C3Consent.GetAdPersonalization();
rewardedInterstitialAd=new C3RewardedInterstitialAd(id,fn);rewardedInterstitialAd.Load(adPersonalization,fn)});addHandler("ShowRewardedInterstitialAdvert",async fn=>{if(!rewardedInterstitialAd)return C3AdUtils.Failure(fn,"rewarded interstitial ad not created");rewardedInterstitialAd.Show(fn)});addHandler("Configure",async(id,pubID,privacyPolicy,showFree,showConsent,debug,debugLocation,showOnStartUp,fn)=>{const firstCall=!C3AdUtils.HasInitConfigurationOptions();C3AdUtils.SetInitConfigureOptions(id,
pubID,privacyPolicy,showFree,showConsent,debug,debugLocation);if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;if(firstCall)await C3Consent.Reset();if(!await C3Consent.RequestInfoUpdateForTesting(debug,debugLocation,fn))return;if(firstCall)if(showOnStartUp)await C3Consent.ShowConsentForm("eu");else await C3Consent.UpdateConsentStatus();else await C3Consent.ShowConsentForm("always");await C3Consent.SuccessResponse(fn)});addHandler("RequestConsent",async fn=>{api["Configure"](C3AdUtils.ConfigurationOptions.id,
C3AdUtils.ConfigurationOptions.pubID,C3AdUtils.ConfigurationOptions.privacyPolicy,C3AdUtils.ConfigurationOptions.showFree,"always",C3AdUtils.ConfigurationOptions.debug,C3AdUtils.ConfigurationOptions.debugLocation,false,fn)});addHandler("SetMaxAdContentRating",async(label,fn)=>{if(!await C3AdUtils.StartAdmobPlus(fn))return;if(!label)return C3AdUtils.Failure(fn,"Label not specified");try{C3AdUtils.UpdateAdmobPlusRequest("maxAdContentRating",label);C3AdUtils.Success(fn,"")}catch(error){C3AdUtils.Failure(fn,
"invalid label")}});addHandler("TagForChildDirectedTreatment",async(label,fn)=>{if(!await C3AdUtils.StartAdmobPlus(fn))return;try{C3AdUtils.UpdateAdmobPlusRequest("tagForChildDirectedTreatment",label===1?true:false);C3AdUtils.Success(fn,"")}catch(error){C3AdUtils.Failure(fn,"invalid label")}});addHandler("TagForUnderAgeOfConsent",async(label,fn)=>{if(!await C3AdUtils.StartAdmobPlus(fn))return;try{C3AdUtils.UpdateAdmobPlusRequest("tagForUnderAgeOfConsent",label===1?true:false);C3AdUtils.Success(fn,
"")}catch(error){C3AdUtils.Failure(fn,"invalid label")}});addHandler("RequestIDFA",async fn=>{if(!await C3AdUtils.StartAdmobPlus(fn))return;C3Consent.RequestIDFA(fn)});addHandler("StatusUpdate",async(debug,debugLocation,fn)=>{if(!await C3AdUtils.StartAdmobPlus(fn,debug))return;await C3Consent.RequestInfoUpdateForTestingSkipErrors(debug,debugLocation,fn);await C3Consent.StatusUpdateSuccessResponse(fn)});if(!self.C3MobileAdvertsAPI)self.C3MobileAdvertsAPI={};self.C3MobileAdvertsAPI.real=api};
'use strict';{const STATUS_PERSONALISED="PERSONALIZED";const api={};const addHandler=(name,fn)=>api[name]=fn;const sleep=t=>new Promise(r=>setTimeout(r,t));let bannerState=null;let intState=null;let videoState=null;let rewardedState=null;let rewardedIntState=null;function getArgument(name,a){const args=a.slice(0,-1);const fn=a[a.length-1];console.log(name,args);return[args,fn]}addHandler("CreateBannerAdvert",async(...a)=>{const [data,fn]=getArgument("CreateBannerAdvert",a);await sleep(50);if(bannerState)fn("Banner already exists");
else{bannerState="ready";fn(null,"Created banner")}});addHandler("ShowBannerAdvert",async(...a)=>{const [data,fn]=getArgument("ShowBannerAdvert",a);await sleep(50);if(bannerState!="ready")fn("Banner cannot be shown");else{bannerState="shown";fn(null,"Showed banner")}});addHandler("HideBannerAdvert",async(...a)=>{const [data,fn]=getArgument("HideBannerAdvert",a);await sleep(50);if(bannerState!="shown")fn("Banner cannot be hidden");else{bannerState=null;fn(null,"Hid banner")}});addHandler("CreateInterstitialAdvert",
async(...a)=>{const [data,fn]=getArgument("CreateInterstitialAdvert",a);await sleep(50);if(intState)fn("Intersitial already exists");else{intState="ready";fn(null,"Created interstitial")}});addHandler("ShowInterstitialAdvert",async(...a)=>{const [data,fn]=getArgument("ShowInterstitialAdvert",a);await sleep(50);if(intState!="ready")fn("Cannot show interstitial");else{intState=null;fn(null,"Interstitial shown")}});addHandler("CreateVideoAdvert",async(...a)=>{const [data,fn]=getArgument("CreateVideoAdvert",
a);await sleep(50);if(videoState)fn("Video already exists");else{videoState="ready";fn(null,"Created video")}});addHandler("ShowVideoAdvert",async(...a)=>{const [data,fn]=getArgument("ShowVideoAdvert",a);await sleep(50);if(videoState!="ready")fn("Cannot show video");else{videoState=null;fn(null,'["example type", 20]')}});addHandler("CreateRewardedAdvert",async(...a)=>{const [data,fn]=getArgument("CreateRewardedAdvert",a);await sleep(50);if(rewardedState)fn("Rewarded already exists");else{rewardedState=
"ready";fn(null,"Created rewarded")}});addHandler("ShowRewardedAdvert",async(...a)=>{const [data,fn]=getArgument("ShowRewardedAdvert",a);await sleep(50);if(rewardedState!="ready")fn("Cannot show rewarded");else{rewardedState=null;fn(null,'["example type", 20]')}});addHandler("CreateRewardedInterstitialAdvert",async(...a)=>{const [data,fn]=getArgument("CreateRewardedInterstitialAdvert",a);await sleep(50);if(rewardedIntState)fn("Rewarded intersitial already exists");else{rewardedIntState="ready";fn(null,
"Created rewarded interstitial")}});addHandler("ShowRewardedInterstitialAdvert",async(...a)=>{const [data,fn]=getArgument("ShowRewardedInterstitialAdvert",a);await sleep(50);if(rewardedIntState!="ready")fn("Cannot show rewarded interstitial");else{rewardedIntState=null;fn(null,"Rewarded interstitial shown")}});addHandler("Configure",async(...a)=>{const [data,fn]=getArgument("Configure",a);await sleep(50);fn(null,STATUS_PERSONALISED+"&&true")});addHandler("RequestConsent",async(...a)=>{const [data,
fn]=getArgument("RequestConsent",a);await sleep(50);fn(null,STATUS_PERSONALISED+"&&true")});addHandler("RequestIDFA",async(...a)=>{const [data,fn]=getArgument("RequestIDFA",a);await sleep(50);fn(null,"authorized")});if(!self.C3MobileAdvertsAPI)self.C3MobileAdvertsAPI={};self.C3MobileAdvertsAPI.fake=api};
'use strict';{const DOM_COMPONENT_ID="advert";const USE_EMULATOR=false;let hasShownWarning=false;const HANDLER_CLASS=class MobileAdvertHandler extends self.DOMHandler{constructor(iRuntime){super(iRuntime,DOM_COMPONENT_ID);const handler=name=>[name,data=>this._CallMethod(name,data)];this.AddRuntimeMessageHandlers([handler("CreateBannerAdvert"),handler("ShowBannerAdvert"),handler("HideBannerAdvert"),handler("CreateInterstitialAdvert"),handler("ShowInterstitialAdvert"),handler("CreateVideoAdvert"),handler("ShowVideoAdvert"),
handler("CreateRewardedAdvert"),handler("ShowRewardedAdvert"),handler("CreateRewardedInterstitialAdvert"),handler("ShowRewardedInterstitialAdvert"),handler("Configure"),handler("RequestConsent"),handler("SetUserPersonalisation"),handler("SetMaxAdContentRating"),handler("TagForChildDirectedTreatment"),handler("TagForUnderAgeOfConsent"),handler("RequestIDFA"),handler("StatusUpdate")])}_GetPlugin(){}async _CallMethod(name,data){let api;if(self["cordova"])api=self.C3MobileAdvertsAPI.real;else if(USE_EMULATOR)api=
self.C3MobileAdvertsAPI.fake;if(!api){if(!hasShownWarning){hasShownWarning=true;console.warn("The Mobile Advert plugin is not loaded. Please note that it only works in Android or iOS exports")}throw new Error("advert plugin not loaded");}return new Promise((resolve,reject)=>{const method=api[name];method(...data,(error,result)=>{if(error)reject(error);else resolve(result)})})}};self.RuntimeInterface.AddDOMHandlerClass(HANDLER_CLASS)};
'use strict';{const DOM_COMPONENT_ID="platform-info";const HANDLER_CLASS=class PlatformInfoDOMHandler extends self.DOMHandler{constructor(iRuntime){super(iRuntime,DOM_COMPONENT_ID);this.AddRuntimeMessageHandlers([["get-initial-state",()=>this._OnGetInitialState()],["request-wake-lock",()=>this._OnRequestWakeLock()],["release-wake-lock",()=>this._OnReleaseWakeLock()]]);window.addEventListener("resize",()=>this._OnResize());this._screenWakeLock=null}_OnGetInitialState(){return{"screenWidth":screen.width,
"screenHeight":screen.height,"windowOuterWidth":window.outerWidth,"windowOuterHeight":window.outerHeight,"safeAreaInset":this._GetSafeAreaInset(),"supportsWakeLock":!!navigator["wakeLock"]}}_GetSafeAreaInset(){const elem=document.body;const elemStyle=elem.style;elemStyle.setProperty("--temp-sai-top","env(safe-area-inset-top)");elemStyle.setProperty("--temp-sai-right","env(safe-area-inset-right)");elemStyle.setProperty("--temp-sai-bottom","env(safe-area-inset-bottom)");elemStyle.setProperty("--temp-sai-left",
"env(safe-area-inset-left)");const computedStyle=getComputedStyle(elem);const ret=[computedStyle.getPropertyValue("--temp-sai-top"),computedStyle.getPropertyValue("--temp-sai-right"),computedStyle.getPropertyValue("--temp-sai-bottom"),computedStyle.getPropertyValue("--temp-sai-left")].map(str=>{const n=parseInt(str,10);return isFinite(n)?n:0});elemStyle.removeProperty("--temp-sai-top");elemStyle.removeProperty("--temp-sai-right");elemStyle.removeProperty("--temp-sai-bottom");elemStyle.removeProperty("--temp-sai-left");
return ret}_OnResize(){this.PostToRuntime("window-resize",{"windowOuterWidth":window.outerWidth,"windowOuterHeight":window.outerHeight,"safeAreaInset":this._GetSafeAreaInset()})}async _OnRequestWakeLock(){if(this._screenWakeLock)return;try{this._screenWakeLock=await navigator["wakeLock"]["request"]("screen");this._screenWakeLock.addEventListener("release",()=>this._OnWakeLockReleased());console.log("[Construct 3] Screen wake lock acquired");this.PostToRuntime("wake-lock-acquired")}catch(err){console.warn("[Construct 3] Failed to acquire screen wake lock: ",
err);this.PostToRuntime("wake-lock-error")}}_OnReleaseWakeLock(){if(!this._screenWakeLock)return;this._screenWakeLock["release"]();this._screenWakeLock=null}_OnWakeLockReleased(){console.log("[Construct 3] Screen wake lock released");this._screenWakeLock=null;this.PostToRuntime("wake-lock-released")}};self.RuntimeInterface.AddDOMHandlerClass(HANDLER_CLASS)};
'use strict';{const DOM_COMPONENT_ID="browser";const HANDLER_CLASS=class BrowserDOMHandler extends self.DOMHandler{constructor(iRuntime){super(iRuntime,DOM_COMPONENT_ID);this._exportType="";this.AddRuntimeMessageHandlers([["get-initial-state",e=>this._OnGetInitialState(e)],["ready-for-sw-messages",()=>this._OnReadyForSWMessages()],["alert",e=>this._OnAlert(e)],["close",()=>this._OnClose()],["set-focus",e=>this._OnSetFocus(e)],["vibrate",e=>this._OnVibrate(e)],["lock-orientation",e=>this._OnLockOrientation(e)],
["unlock-orientation",()=>this._OnUnlockOrientation()],["navigate",e=>this._OnNavigate(e)],["request-fullscreen",e=>this._OnRequestFullscreen(e)],["exit-fullscreen",()=>this._OnExitFullscreen()],["set-hash",e=>this._OnSetHash(e)]]);window.addEventListener("online",()=>this._OnOnlineStateChanged(true));window.addEventListener("offline",()=>this._OnOnlineStateChanged(false));window.addEventListener("hashchange",()=>this._OnHashChange());document.addEventListener("backbutton",()=>this._OnCordovaBackButton())}_OnGetInitialState(e){this._exportType=
e["exportType"];return{"location":location.toString(),"isOnline":!!navigator.onLine,"referrer":document.referrer,"title":document.title,"isCookieEnabled":!!navigator.cookieEnabled,"screenWidth":screen.width,"screenHeight":screen.height,"windowOuterWidth":window.outerWidth,"windowOuterHeight":window.outerHeight,"isScirraArcade":typeof window["is_scirra_arcade"]!=="undefined"}}_OnReadyForSWMessages(){if(!window["C3_RegisterSW"]||!window["OfflineClientInfo"])return;window["OfflineClientInfo"]["SetMessageCallback"](e=>
this.PostToRuntime("sw-message",e["data"]))}_OnOnlineStateChanged(isOnline){this.PostToRuntime("online-state",{"isOnline":isOnline})}_OnCordovaBackButton(){this.PostToRuntime("backbutton")}GetNWjsWindow(){if(this._exportType==="nwjs")return nw["Window"]["get"]();else return null}_OnAlert(e){alert(e["message"])}_OnClose(){if(navigator["app"]&&navigator["app"]["exitApp"])navigator["app"]["exitApp"]();else if(navigator["device"]&&navigator["device"]["exitApp"])navigator["device"]["exitApp"]();else window.close()}_OnSetFocus(e){const isFocus=
e["isFocus"];if(this._exportType==="nwjs"){const win=this.GetNWjsWindow();if(isFocus)win["focus"]();else win["blur"]()}else if(isFocus)window.focus();else window.blur()}_OnVibrate(e){if(navigator["vibrate"])navigator["vibrate"](e["pattern"])}_OnLockOrientation(e){const orientation=e["orientation"];if(screen["orientation"]&&screen["orientation"]["lock"])screen["orientation"]["lock"](orientation).catch(err=>console.warn("[Construct 3] Failed to lock orientation: ",err));else try{let result=false;if(screen["lockOrientation"])result=
screen["lockOrientation"](orientation);else if(screen["webkitLockOrientation"])result=screen["webkitLockOrientation"](orientation);else if(screen["mozLockOrientation"])result=screen["mozLockOrientation"](orientation);else if(screen["msLockOrientation"])result=screen["msLockOrientation"](orientation);if(!result)console.warn("[Construct 3] Failed to lock orientation")}catch(err){console.warn("[Construct 3] Failed to lock orientation: ",err)}}_OnUnlockOrientation(){try{if(screen["orientation"]&&screen["orientation"]["unlock"])screen["orientation"]["unlock"]();
else if(screen["unlockOrientation"])screen["unlockOrientation"]();else if(screen["webkitUnlockOrientation"])screen["webkitUnlockOrientation"]();else if(screen["mozUnlockOrientation"])screen["mozUnlockOrientation"]();else if(screen["msUnlockOrientation"])screen["msUnlockOrientation"]()}catch(err){}}_OnNavigate(e){const type=e["type"];if(type==="back")if(navigator["app"]&&navigator["app"]["backHistory"])navigator["app"]["backHistory"]();else window.history.back();else if(type==="forward")window.history.forward();
else if(type==="reload")location.reload();else if(type==="url"){const url=e["url"];const target=e["target"];const exportType=e["exportType"];if(self["cordova"]&&self["cordova"]["InAppBrowser"])self["cordova"]["InAppBrowser"]["open"](url,"_system");else if(exportType==="preview"||exportType==="windows-webview2")window.open(url,"_blank");else if(!this._isScirraArcade)if(target===2)window.top.location=url;else if(target===1)window.parent.location=url;else window.location=url}else if(type==="new-window"){const url=
e["url"];const tag=e["tag"];if(self["cordova"]&&self["cordova"]["InAppBrowser"])self["cordova"]["InAppBrowser"]["open"](url,"_system");else window.open(url,tag)}}_OnRequestFullscreen(e){if(this._exportType==="windows-webview2"||this._exportType==="macos-wkwebview"){self.RuntimeInterface._SetWrapperIsFullscreenFlag(true);this._iRuntime._SendWrapperMessage({"type":"set-fullscreen","fullscreen":true})}else{const opts={"navigationUI":"auto"};const navUI=e["navUI"];if(navUI===1)opts["navigationUI"]="hide";
else if(navUI===2)opts["navigationUI"]="show";const elem=document.documentElement;if(elem["requestFullscreen"])elem["requestFullscreen"](opts);else if(elem["mozRequestFullScreen"])elem["mozRequestFullScreen"](opts);else if(elem["msRequestFullscreen"])elem["msRequestFullscreen"](opts);else if(elem["webkitRequestFullScreen"])if(typeof Element["ALLOW_KEYBOARD_INPUT"]!=="undefined")elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);else elem["webkitRequestFullScreen"]()}}_OnExitFullscreen(){if(this._exportType===
"windows-webview2"||this._exportType==="macos-wkwebview"){self.RuntimeInterface._SetWrapperIsFullscreenFlag(false);this._iRuntime._SendWrapperMessage({"type":"set-fullscreen","fullscreen":false})}else if(document["exitFullscreen"])document["exitFullscreen"]();else if(document["mozCancelFullScreen"])document["mozCancelFullScreen"]();else if(document["msExitFullscreen"])document["msExitFullscreen"]();else if(document["webkitCancelFullScreen"])document["webkitCancelFullScreen"]()}_OnSetHash(e){location.hash=
e["hash"]}_OnHashChange(){this.PostToRuntime("hashchange",{"location":location.toString()})}};self.RuntimeInterface.AddDOMHandlerClass(HANDLER_CLASS)};
